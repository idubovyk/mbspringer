(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    275462,       5714]
NotebookOptionsPosition[    263872,       5527]
NotebookOutlinePosition[    264230,       5543]
CellTagsIndexPosition[    264187,       5540]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[" Chapter 3, Section 3.14 `Phase Space MB Integrals\[CloseCurlyQuote]", \
"Text",
 CellChangeTimes->{{3.861682494385914*^9, 3.861682512544613*^9}, 
   3.861682547449184*^9, {3.8616908723968277`*^9, 3.8616909041174173`*^9}, {
   3.8616909886261263`*^9, 3.861691029766721*^9}, {3.86169111633884*^9, 
   3.861691116464669*^9}, {3.861691317181327*^9, 3.861691323706272*^9}, {
   3.8667746433960047`*^9, 3.866774652729196*^9}, {3.866774861044655*^9, 
   3.866774865744293*^9}, {3.8691033391845016`*^9, 3.869103375811934*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"24f0f075-8fd8-4ead-89a7-e1ad83d2d0e7"],

Cell["Solution to Problem 3.17", "Text",
 CellChangeTimes->{{3.66281610878771*^9, 3.662816156701271*^9}, {
  3.8485522569410048`*^9, 3.848552257045532*^9}, {3.8485530383357677`*^9, 
  3.8485530492480087`*^9}, {3.8667749797689342`*^9, 3.866774980252771*^9}, {
  3.8691034630831823`*^9, 3.8691034754047117`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"84442314-781c-43bf-baed-d59687bd45b9"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"The", " ", "integrand", " ", "in", " ", 
   RowBox[{"eq", ".", " ", 
    RowBox[{"(", "3.130", ")"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691034933084087`*^9, 3.869103503146199*^9}, {
  3.8691035358221407`*^9, 3.869103536432788*^9}, {3.869103922722089*^9, 
  3.869103955156178*^9}},ExpressionUUID->"e5300884-7ef0-4eb1-9239-\
586f110d948e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", "Pi"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"3", "-", 
      RowBox[{"2", "d"}]}], ")"}]}], 
   RowBox[{"2", "^", 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}]}], 
   RowBox[{"Omega", "[", 
    RowBox[{"d", "-", "1"}], "]"}], 
   RowBox[{"Omega", "[", 
    RowBox[{"d", "-", "2"}], "]"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"E1", " ", "E2"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"d", "-", "3"}], ")"}]}], " ", 
   RowBox[{"sinth", "^", 
    RowBox[{"(", 
     RowBox[{"d", "-", "4"}], ")"}]}], 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"s", "-", 
     RowBox[{"2", "E1", " ", 
      RowBox[{"Sqrt", "[", "s", "]"}]}], "-", 
     RowBox[{"2", "E2", " ", 
      RowBox[{"Sqrt", "[", "s", "]"}]}], "+", 
     RowBox[{"2", "E1", " ", "E2", 
      RowBox[{"(", 
       RowBox[{"1", "-", "costh"}], ")"}]}]}], "]"}], 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", "s", "]"}], "-", "E1", "-", "E2"}], "]"}], 
   RowBox[{"HeavisideTheta", "[", "E1", "]"}], 
   RowBox[{"HeavisideTheta", "[", "E2", "]"}], "*", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "E1", " ", 
         RowBox[{"Sqrt", "[", "s", "]"}]}], "-", 
        RowBox[{"2", "E1", " ", "E2", 
         RowBox[{"(", 
          RowBox[{"1", "-", "costh"}], ")"}]}]}], ")"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "E2", " ", 
         RowBox[{"Sqrt", "[", "s", "]"}]}], "-", 
        RowBox[{"2", "E1", " ", "E2", 
         RowBox[{"(", 
          RowBox[{"1", "-", "costh"}], ")"}]}]}], ")"}]}], 
     ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.869103512866664*^9, 3.869103775794858*^9}, {
  3.869106735840253*^9, 
  3.869106738287575*^9}},ExpressionUUID->"06c575b7-02f4-4c37-9515-\
9876a159ce17"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "d"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"E1", " ", "E2"}], ")"}], 
     RowBox[{
      RowBox[{"-", "3"}], "+", "d"}]], " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", "d"}]}]], " ", 
    SuperscriptBox["sinth", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "d"}]], " ", 
    RowBox[{"DiracDelta", "[", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "costh"}], ")"}], " ", "E1", " ", "E2"}], "-", 
      RowBox[{"2", " ", "E1", " ", 
       SqrtBox["s"]}], "-", 
      RowBox[{"2", " ", "E2", " ", 
       SqrtBox["s"]}], "+", "s"}], "]"}], " ", 
    RowBox[{"HeavisideTheta", "[", "E1", "]"}], " ", 
    RowBox[{"HeavisideTheta", "[", "E2", "]"}], " ", 
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{
      RowBox[{"-", "E1"}], "-", "E2", "+", 
      SqrtBox["s"]}], "]"}], " ", 
    RowBox[{"Omega", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
    RowBox[{"Omega", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], "]"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "costh"}], ")"}], " ", "E1", " ", "E2"}], "+", 
      RowBox[{"2", " ", "E1", " ", 
       SqrtBox["s"]}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{"1", "-", "costh"}], ")"}], " ", "E1", " ", "E2"}], "+", 
      RowBox[{"2", " ", "E2", " ", 
       SqrtBox["s"]}]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.869103778521965*^9, 3.869104928168847*^9, 
  3.8691067848928537`*^9, 3.869110809678856*^9, 3.869115010959276*^9, 
  3.869115410635415*^9, 3.869116192964188*^9, 
  3.869118098232916*^9},ExpressionUUID->"529d0514-b57a-4136-8094-\
338d9cf531c1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Solve", " ", "the", " ", "Dirac", " ", "delta", " ", "constraint", " ", 
   "for", " ", 
   RowBox[{"e", ".", "g", ".", " ", "E2"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869103854386984*^9, 3.869103905798418*^9}, {
  3.8691039596713657`*^9, 3.8691039725567207`*^9}, {3.869105183743156*^9, 
  3.869105185153235*^9}, {3.869116199104644*^9, 
  3.869116199359598*^9}},ExpressionUUID->"68d098e2-e9cc-42fb-b46a-\
962d579c2e0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiracDeltaArgument", "=", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"integrand", ",", 
     RowBox[{
      RowBox[{"DiracDelta", "[", "z_", "]"}], "\[Rule]", "z"}], ",", 
     RowBox[{"-", "1"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8691039766323423`*^9, 
  3.869104011359622*^9}},ExpressionUUID->"a735acd9-ca6e-4588-9621-\
88cfc1a8be44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "costh"}], ")"}], " ", "E1", " ", "E2"}], "-", 
  RowBox[{"2", " ", "E1", " ", 
   SqrtBox["s"]}], "-", 
  RowBox[{"2", " ", "E2", " ", 
   SqrtBox["s"]}], "+", "s"}]], "Output",
 CellChangeTimes->{{3.8691040073558607`*^9, 3.8691040128465014`*^9}, 
   3.8691051868891077`*^9, 3.869106799863082*^9, 3.869110817065968*^9, 
   3.86911504636659*^9, 3.869115429376272*^9, 3.8691162011536417`*^9, 
   3.869117933404567*^9, 
   3.869118100808908*^9},ExpressionUUID->"9577dee9-8387-4abd-9934-\
27fe96567556"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"E2solution", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"DiracDeltaArgument", "\[Equal]", "0"}], ",", "E2"}], "]"}], "//",
    "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8691040200985394`*^9, 3.869104051298048*^9}, {
  3.869105189614191*^9, 3.869105190701002*^9}, {3.869116203052415*^9, 
  3.869116205613296*^9}},ExpressionUUID->"9a9c03ed-9a6e-40f6-8603-\
cbc010150345"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"E2", "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "E1", " ", 
      SqrtBox["s"]}], "+", "s"}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "E1"}], "+", 
       RowBox[{"costh", " ", "E1"}], "+", 
       SqrtBox["s"]}], ")"}]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8691040410636053`*^9, 3.869104051783041*^9}, 
   3.869105191033164*^9, 3.869106800407826*^9, 3.86911081791901*^9, 
   3.8691150543719683`*^9, 3.86911543038223*^9, 3.869116206020773*^9, 
   3.8691179346026697`*^9, 
   3.869118101545906*^9},ExpressionUUID->"5e651b81-5cb2-46cb-bb0b-\
e0e1bb144d23"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Integrate", " ", "over", " ", "E2", " ", "with", " ", "the", " ", "Dirac", 
   " ", "delta"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691162128359823`*^9, 
  3.869116236534748*^9}},ExpressionUUID->"d2949fbb-882b-4b56-a60b-\
fe106083cf41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"D", "[", 
       RowBox[{"DiracDeltaArgument", ",", "E2"}], "]"}]}], "*", "integrand"}],
     "/.", "E2solution"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.869104065923209*^9, 3.86910414032629*^9}, {
   3.869105195093297*^9, 3.8691051970316553`*^9}, 3.869115144089223*^9, {
   3.8691162449994698`*^9, 
   3.869116250234456*^9}},ExpressionUUID->"bfb29ff2-6662-4c31-8b42-\
78cf2f43a769"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["8", 
       RowBox[{"1", "-", "d"}]], " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"3", "-", 
        RowBox[{"2", " ", "d"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
         SqrtBox["s"]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"E1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "E1", " ", 
             SqrtBox["s"]}], "+", "s"}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
          SqrtBox["s"]}]], ")"}], "d"], " ", 
      SuperscriptBox["sinth", 
       RowBox[{
        RowBox[{"-", "4"}], "+", "d"}]], " ", 
      RowBox[{"DiracDelta", "[", "0", "]"}], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"E1", ",", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "E1", " ", 
           SqrtBox["s"]}], "+", "s"}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
            SqrtBox["s"]}], ")"}]}]], ",", 
        RowBox[{
         RowBox[{"-", "E1"}], "+", 
         SqrtBox["s"], "-", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "E1", " ", 
            SqrtBox["s"]}], "+", "s"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
             SqrtBox["s"]}], ")"}]}]]}]}], "]"}], " ", 
      RowBox[{"Omega", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
      RowBox[{"Omega", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "costh"}], ")"}], " ", 
      SuperscriptBox["E1", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "E1"}], "+", 
         SqrtBox["s"]}], ")"}], "4"], " ", 
      SuperscriptBox["s", "3"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.8691041371024227`*^9, 3.869104140886508*^9}, 
   3.869105197433852*^9, 3.869106803191722*^9, 3.869110819464078*^9, 
   3.8691150558017807`*^9, 3.869115432037366*^9, 3.869116251412575*^9, 
   3.869117936584094*^9, 
   3.8691181031178017`*^9},ExpressionUUID->"3073b0c9-b776-4717-b3f6-\
378fda988d5b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Indeed", " ", "we", " ", "have", " ", 
   RowBox[{"DiracDelta", "[", "0", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
    "showing", " ", "the", " ", "substitution", " ", "is", " ", "correct"}], 
    ")"}], " ", "that", " ", "we", " ", "drop"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869116260837554*^9, 
  3.8691163083815413`*^9}},ExpressionUUID->"2f7d83b0-b5ea-49c5-8efc-\
5431a8d54ea4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand1", "=", 
  RowBox[{"integrand1", "/.", 
   RowBox[{
    RowBox[{"DiracDelta", "[", "0", "]"}], "\[Rule]", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.8691163120110683`*^9, 
  3.869116319351365*^9}},ExpressionUUID->"c564c83b-c63f-4789-9daa-\
5abf080090b2"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["8", 
       RowBox[{"1", "-", "d"}]], " ", 
      SuperscriptBox["\[Pi]", 
       RowBox[{"3", "-", 
        RowBox[{"2", " ", "d"}]}]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
         SqrtBox["s"]}], ")"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{"E1", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "E1", " ", 
             SqrtBox["s"]}], "+", "s"}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
          SqrtBox["s"]}]], ")"}], "d"], " ", 
      SuperscriptBox["sinth", 
       RowBox[{
        RowBox[{"-", "4"}], "+", "d"}]], " ", 
      RowBox[{"HeavisideTheta", "[", 
       RowBox[{"E1", ",", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "E1", " ", 
           SqrtBox["s"]}], "+", "s"}], 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
            SqrtBox["s"]}], ")"}]}]], ",", 
        RowBox[{
         RowBox[{"-", "E1"}], "+", 
         SqrtBox["s"], "-", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "E1", " ", 
            SqrtBox["s"]}], "+", "s"}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
             SqrtBox["s"]}], ")"}]}]]}]}], "]"}], " ", 
      RowBox[{"Omega", "[", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
      RowBox[{"Omega", "[", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "d"}], "]"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "costh"}], ")"}], " ", 
      SuperscriptBox["E1", "4"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "E1"}], "+", 
         SqrtBox["s"]}], ")"}], "4"], " ", 
      SuperscriptBox["s", "3"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.8691163200238123`*^9, 3.869117940226157*^9, 
  3.8691181052416*^9},ExpressionUUID->"032ae603-de02-42a2-9dca-b7a57aa1acc9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Examine", " ", "the", " ", "constraints"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691163272552357`*^9, 
  3.869116336508317*^9}},ExpressionUUID->"a160c938-f5c8-430d-a843-\
9248a509b20f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HeavisideThetaArguments", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"integrand1", ",", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", "z__", "]"}], "\[Rule]", "z"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.869116375306982*^9, 
  3.869116397808177*^9}},ExpressionUUID->"537bfca5-9ae1-458e-b126-\
27ee42cc82e1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"E1", ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "E1", " ", 
      SqrtBox["s"]}], "+", "s"}], 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
       SqrtBox["s"]}], ")"}]}]], ",", 
   RowBox[{
    RowBox[{"-", "E1"}], "+", 
    SqrtBox["s"], "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "E1", " ", 
       SqrtBox["s"]}], "+", "s"}], 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "costh"}], ")"}], " ", "E1"}], "+", 
        SqrtBox["s"]}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8691163859877787`*^9, 3.869116398592659*^9}, 
   3.869117946670259*^9, 
   3.869118106989904*^9},ExpressionUUID->"cd26c145-683c-4cc0-bd40-\
468dd04d24d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"HeavisideTheta", " ", "for", " ", "E1"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Implies", " ", "E1"}], " ", ">", " ", "0"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.86911634254871*^9, 3.8691163547778187`*^9}, {
  3.869116428302444*^9, 
  3.8691164402663383`*^9}},ExpressionUUID->"c300569b-1463-4e57-a41b-\
bfafff76161b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"HeavisideThetaArguments", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", "E1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.869116413533386*^9, 
  3.869116424445176*^9}},ExpressionUUID->"ed5c10d9-60b2-4fec-aacf-\
b045c6932237"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"E1", "\[Rule]", "0"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8691164248532543`*^9, 
  3.869118108287225*^9},ExpressionUUID->"c62f306f-2b51-4db3-9ae9-\
1d8bdc82f54a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"HeavisideTheta", " ", "for", " ", "E2"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Implies", " ", "E1"}], " ", "<", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", "s", "]"}], "/", "2"}], " ", "for", " ", "all"}], 
     " ", "-", "1"}], " ", "<", " ", "costh", " ", "<", " ", "1"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.869116448773678*^9, 
  3.8691164852341833`*^9}},ExpressionUUID->"e6b442b6-fcbf-41d0-b672-\
6e76fa13a226"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"HeavisideThetaArguments", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", "E1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8691164560831537`*^9, 
  3.869116456196686*^9}},ExpressionUUID->"c52688b8-939d-4e1f-a50a-\
d229cd27243f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"E1", "\[Rule]", 
    FractionBox[
     SqrtBox["s"], "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.869116456461858*^9, 
  3.869118109437694*^9},ExpressionUUID->"7bd5c836-d59c-4a48-bab9-\
b607dd76ad58"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Plot", " ", "E2", " ", "as", " ", "a", " ", "function", " ", "of", " ", 
    "E1", " ", "and", " ", "costh", " ", "for", " ", "s"}], " ", "=", " ", 
   "1"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869116669984223*^9, 3.869116692774084*^9}, {
  3.869116744761607*^9, 
  3.869116748095797*^9}},ExpressionUUID->"7fa7c89e-5d2a-460c-b155-\
130e03b879ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"HeavisideThetaArguments", "[", 
     RowBox[{"[", "2", "]"}], "]"}], "/.", 
    RowBox[{"s", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"E1", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"costh", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8691167691425953`*^9, {3.869116821441305*^9, 
   3.869116821715003*^9}},ExpressionUUID->"abd66041-1c61-4d6d-8870-\
09b5bbcfd235"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnXlYTd/3x0OZ+SBEUoYiImQI0VaSIiGEREgiLgmZisylkKSuoSIqFBq4
SbdO3WYab/OdSoYMJXMZ0s+ts/b22V+f5+cfz/N6tnPXeZ991ln7ffZZhq7f
buXQXkFBgaekoNDh99/XVkTGe46xNxwqXRDX0tLAFLXI/1QhJ13Di1rmoQi4
ann3ZjmPelXZomkei/ls4eVvcq75qO/EeE4i5grBp77IeX7GyDhNcwE5zphb
7+X8lG5GLkeciXl0n9g3cm4auP4lj/ME8/d6M5/JeTsF+Z9CzJPfhVfKud39
fB9NcyHm1edluXKetClooLlfCYnH7NsjOR80eGs4R1yG+T7roVflfF/R9Il+
mpWYd1XdsFPOy493SeFxxJir3Xg9UM4nT6+wEPOkmBev3N/j129+jo0L+EZj
+y7yuEHnjbuiL/I4bxl+lnHznzoDHxn5beiMYqIz8GcTogJDQojOwGsu9W92
tSc6A7c2OPJwhxrRGfhMsc6XJVkyrDPwB5pp/+y2k2GdgQ95bJAqlUqxzsCf
j1AThutLsc7Ap6s65iTaSLDOwOO1gw/njBBjnYGvcF9XnLGqEusMvGFB0qSN
G8uwzsD7bUrTvR9YiHUGfv5L/a0vmVcNQefb3ZQ9OOKXTPjZ49//1Bm4g8rU
8s/hRGfgvouP/XQzIjoDf+6pm5qbK8M6A9/xJmvt+DkyrDNwM79lF8LCpFhn
4J5n+InTaiVYZ+An53V629IixjoDv9F7ceDcpyKsM/BRvcpbbHdVYp2B1/Rx
L5jsX451xvEYDPrY0lKCdQbupzcmQdmgCOsMfOCbG+83bszEOgM/sdox7Wum
L9b5XejujZrmNczZ5dmNf+oM3GtDlIr2AaIz8PEj+todeyHDOgP3PXfP7K4B
0Rm4qW7HxbP3SbHOwDXfvLt9hCvBOgMPexjXPeGcGOsM/ESh+3wbGxHWGbjL
pb46Z55VYJ2Br4z8FJSiUo51Bs4VrF66pKwE6wz8mVeg1vG3RVhn4DuK0g0U
FHKxzsDvHYj6XFmbgnUGXvagqSx4zQmss0PrPBcz+zW6fflTZ+Dt+StfFy8k
OgO/ce6EJNSb6AxcUtV4Mf+eFOsM3CCvvfOTeAnWGfikc+3F+UFirDPwsJ7J
lnI9QWfgOfYfdeV6gs7AbVU5ZsPHlGOdSTzHoguGlmKdgZ+yMo6+fVuIdQae
eRKNdjcqwDoDP5axXm+KfxbWGXjevNnlj0ckYp2Br9DQXNSY6UHNZyHjULvg
4//OZyEzv0v/1V816fksZG5OttqSOZGez0Lmfa8gvZfaUmo+C5nOI8o+ye/3
f89nIZPfJcD2QZyIms9CZuu07vfmz6yk5rOQeXRJtUp+v/97PguZqlqllVvu
lFLzWcgEf2tavH1/MTWfhUySrd6mytpCaj4LmXk3hl5Q5T2h5rOQ6frE96LK
6nRqPv+Of9n5oua7PGo+C5lXlySmH8v3UzoLmMX3fBv+V2cBo2k+68zp7zJK
ZwGzUWlkgfx59G+dBQyv2uF0bLiE0lnA3D7gdEtnMa2zgDme6uIRVFFJ6Sxg
PBVj3q7Ur6B0FjDek+Lt5c+jf+ssYJau72KmsrqE0lnAbBgeMupYLyGls4Ap
z0zzPvYin9JZwFikRTmfeZZN6SxguoULdh5/m0rpLGAyy3rNdd4fR+ksYLLN
+ywNWeOKdVZg/xjuKa77U2fgGeP2hQYWEp2Bl12KOF3hRXQGPqWu8P4XbaIz
8FqbAyG3b4uwzsBTuve0HdqN6Azc2qB+e9Gccqwz8KXL5H9Ksc7A3wacmzpx
YjHWGbjn48dG/uWFWGfgQucpJlk7crHOwGVJnYUBAZlYZ+BVpTVLfkeLdQb+
6u7Qr717x2Cdge9kjl/1HLOTns9oFOr/5i/zGT36Z01On4j/mc+oJl/2TF5H
UfMZWe25U737npiez8h9f43mq24iej6jYbGTNDvOq6DnM/Ji5y01n9Eydt5S
8xnNar/H/egoIT2fUR+lI4JgnwJ6PiOjce1P2Ng8pucz0h2f23v+nXR6PiPf
3f47ptfy6fmMfthcz3O1u0vPZ8Q7eiSgMdOZzs9IpdPK2r/kZ3Sxbs6MZnda
ZyEq3WTPl9ddVH5GnRzdBzdPo3UWIo7Dh+6rf9dXVH5GiWy+pfIzWjhxSd3Q
wFI6PyPIt1R+RtcDOybK6y4qP6OI8ChXg8g8Oj+ja3GTF5v6ZNP5GakcjrVf
3iuNzs/o7t3HjTY2j+j8jPp1adghWhVJ52eUFGZrdaiYQ9cbSLHg8vO/1Buo
Q5iC4bJlMrreQP3fqYXL6zGq3kA3jx35uSJbRNcb6AlbJ1D1Bsp8e2zUo1dl
dL2Bws+6rJTXXVS9gXzYOoGqN5BjvX/vWvtCut5AoT0Lh8nrMareQBLtq5nb
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
UxfeWSmifRikr7x70vdtFbTfgvbbuK97dqiM9lWQdKZI3canhPZJ0KjopN0L
/YW0T4KGsO8HKT8ErTz88ISdTh7te6BfXQ17vRmcQ/se6LXvBZ/ajhm0v4He
Tgn7NeVlCtYZeGPN5TucPQlYZ+Bj6sRVXj1jsM7Al701n/B92DWsM/iTkoa7
1fJxlG+GUn0cauXHpfwxFDSqpF4eB+WDoS5hjZ/kcVN+F+rYUvBNfp6Ur4XO
669uketC+Vco1jJEUUGB6Ax8Pft+kPKjkMaILWryf0/5TuiKh7KW/PdAZ+DT
uVpj5fFR/hJq2nptkvx8KB8JRTf32CM/f8pHQrGXo47K9QI9Dw59zm9pecu0
17915KGYrEfA/5ywSjEmPp74GHcOzO/gp1nPhJ/NXjU6mPiH8J4lcmvH8qln
iE8oKY011zR/x2SPtXFhThE/8DPrJ+st/zpRGkh8v82sPzaM8vE82Dhr+717
fpdL/DouG+fZvpcnD14uxbpFs3EGekVfbFCV4vNNfWh6ncepZZw53/7lj1U6
7M9saallvkY8zahzIOf7oc/d12Z+rxiTm0FF4kHkfLuwPvBt44a7S0qIPzaU
02+8mPea+XBgsc6Ls8Qfm8b6w707F25csJD4n4uz3Fw54jfMjls6W04oEz/z
zn/4Y+ls/FMDx+lcm0v8MQkbP+95tw0Wu0RYh89s/JMX6DjE7KnEOigtuuXF
Edcw9V6d+v7pXw1ulkTxOM8Y92GD3av7ER0m3+5V2NLyjPFdqZErDiK+yoLl
Jp/M/J4zF1apduk8nOjgoLi3v5/mC2bZqYAZ228Q/8o9JnKamPeCqR40duft
IcQnvLCmylbT/CWTw7ufF3SB+IQfWF/Ik/KvOrPxu77vY682l/hXQ9j43ynO
tx3WtQLrMJWNPxZFfg44V4bvo0Vs/JssT+2XMiX4PtrExr+y7nh7hbVCfB95
sPGLnOr7+PfJx/mKy8Z/5dQC9KdP6N86PyXMrrMjt/zpX6W13i9SZnXHRTrH
ssh6/1PrfSFjZuyvSfs4nOg8rPX+rWI2jlsp4e8j/tWty6KfZn7VzNri9BuN
mcS/SjXrOcRP8ykzJ67mfFNn4hNWfjGaLeY9Zbqd+RH9yYD4hFtYX+gJ5V9d
ZOMfPqFA+8054l/lsPEfy9deiPqUYZ2/sfGLize89ltSgnXWZuM3Tkv+7Gkg
xDpHsfHvc61J/T6zAOuczsZ/sCP/ZOWGbKyzhI2/4oH5vT99QrXW617M9I7q
6/unf2XRen1LGKRS8jhnP9HZrfU6ljKTri39WHeH+CpRrfddGfOxfa1pbTnx
r8St91c586nDI+3ZX4l/1a01D1Qys38o9rqrRHxCg9b7XcSMupqTcqEd8Qk/
s74Qn/KvhrHxr9mTFjeubxnW2YqNv7BdwELJRuJfHWHjr1uwOO2CuxDrHMvG
b+u3uVlsXIh1fsrG37XdL+VynSdY595s/G8O/rTrfDwd6zyLjV8js2vsnz7h
/NZ40pm6n6n/8q/a6qJMxi4z9OP1cUTnrq3Hz2HOeQQrXDIgOrfl+SfMgswO
7zrPJDq3zas8ZkW1b2eDCUTntvlTwBzMtvUI7kt8wrZ5UsQUca8pbf9dl4LO
31lf6DTlX1mz8a/3eqv6I434Vzw2/uMle78kNRL/qj8bv8DbafT1L8S/2s3G
vyXZ8+rVlXlY51I2/p+KwTeHdSU+4SQ2/jFxPfkaD1Kxzjls/KWj1E3+9Alf
tcbvx/A01KL+9K/et/JQxikzL0/pJVmHbmuNJ5K5OTkmOTeX+CpfW8fHMgVB
zgF3bxL/qu18eYyy0DG31pX4V23nlch8t1vs9mYi8Qnb4meY62derBgopv2r
h3xryr+adb0t/mvzvgZdvEj8K/XrbfG7O9t0+PKQ+FfBbPx911XeOrSkAOvc
83pb/OuNX97tkfwY65zPxm/R9anWtDMZWOfTbPxVG8ZE+mgRn9CMjd8k7+SG
P33CtrzKoNv83H/5VxvajoMGOR5XfhZEdA5r+110w8T7qc06ovPLNp2RTVxl
3TZVovOCtvNCweJZH7ZmEv8qv+06ojjrpqCP64hPGNx23ZF+yvvR8n3CoHMN
6wstp/yr7mz8N3JdHjafIf7VAjb+GyP7Lfe8Rvyr02z8u3YPzBipmod1zmfj
P7monY7X2Wys82A2/mSLc1P3eaVhnYPZ+GdFeS5veJKIdbZk479QWBbzp0+Y
0jbP0duvLf/yr4a03RfoTJ/QlnHLic4pbfcR+lb/NEvtG1nvr2u779DabQWu
r88R/6pd232KLpyIn6ekQXQObbuv0TarGf0XBBH/yrgtD6CxnEOHazsTnV+x
vtBVyr96xMb/4334mKUhxL/qy8Y/7Bd/ue6yAqzzfTb+CVaxBxzHPME6L2Pj
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
OM7Fp/nRWi0Z6P8AqOrUZQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJwtmgf8TmUbx5/zXOdGUdlkJEqpUCqUTUVSKoqKIiJCQkNEk0gSEpVUSilF
Rtp777epPZBXe+/1fn/v73w+jvv73M95zrjHNX7Xv/GQsX1OL5dKpZ/5L2ir
8l812k9pe9N3GHxOViodDh8KnwUfAx8NT4E7w+3hEXB3+CB4LHwE3BM+W7/N
S6Ud4aNpP6P/M/hd2sUct8Nvcs5SeCX8HnwLfDf8AXwzvAp+H94CbxHTduJo
B59Kf0f4QHg4fAjcDT4dPhjuCo+Bd4Srw23gumW/4/5wPbgGfABcH64Jt4Mb
wLXgDvAZ8Bj4Gvha+Db4dfhE+Hh4OnwKfDI8G+4AHwAPg4+F+8BT4dHwCHgB
PBYeDS+CNQGj4IXwQPg4eBr8B/wL/LnGiWO95oX+NfAj8BfwR3BFuKOen2M7
js/5XIP+OrRd+LyR9kuOShxHMQd1af/L/I6Em/H9iNy/K3FspXmD335MW5n2
IY7n4Z/47nH4Zfh3+DH4Jfg3+En4VfhP+DX4Q3gb2m35/L3upfHi80e029Ke
knsev+QZ3uTzJ3AV2us4luv+/O5O+H54M7wCvg/eBN8B3wtvhNfCj+o68Cx4
EfwkvBp+WOMGXwJfCT8Ez4avhZ+Ga3Bs1vPo+cp+xg9o13E8Bn/F9/PhG+AX
4avgG+GX4Mvha+Cn4Afh5+Af4d/hn+GttFX5/BP8A8cRvG9V2mq87zvw03pH
uFcxF5qTEzlehz+h/7Dcc3ekzuVaj8PfcL174bU6B74HXg1/BD8CP6j3gNfD
a+CP4ZXwCngDfBd8B/w2vAq+E34HfgZ+Av4Wfhl+Af4FHg+Pha+Dl8O3wK/B
U+HJ8G3wOfAE+Eb4bHg8fAN8FjwOXgJPhM+Eb4IvgKfAt8MPww/AW+AL4anw
HfBl8HR4LTwNvhBeCV8Enw+vgKfDF8Gr4Evhi+G74RnwJfBqeCY8DV4DN4Rr
w53hCfAZ8GJ4k+ZZa1XrrOz1sIH2U44vNIa0m8o+723aHfnNdyWv3Y1l76u3
ZFc4KsDt+b4anOAD4e1h2db94D+BX7VnaSvzOcu85mrTfluyTazKd0x5qS19
OxT2uDWcOH6D63PsA+8t2yDmnOa0x6sP3gs+Dm4KN4F7w7vBu2gtwc3gpvDR
8O7wrlp7cHO4GXwsvCvcWGsWHgefDl8L78VRUe/B5wpa67QNZEM5pxXtifS1
hfeHB8Nt4P3gQXBreF/4JLglvCfcH24B7wH3g8+Fz4KXwveVvUe+gx+An9U+
0jkM7EjtSQZpEnya9iQ8ER4BL4G/y/1ufzB459E/Bl5K3znwqfD18NnwcHgx
PAEeov0MT0ve8yvgqfB5WvfwOHgwvBCeDI+Cb4LPhIfKpsDf5h7r37nvN7nn
4Df4As65GL6VvinwmfDN8H9z+5vvOOcLeGf4B/hLuDH8I7wlt3/6Fv4stw/7
Bt6a2z99D09Ptk130vee7HjZvlu2fQ/5LtrLOOcm+u+GL4HnyRbAI+F+8Bz4
LHiYbDB8qsaQ346hXUP/T/QPhD/MvUY3c/1Lk33hXfRdlGx/l8Oj4OPgufBp
cH/ZX/h0eAB8FTwaPh6eB4+BT4Dnw8Pho+HL9QxwH3g2PALuC18Br0j2Mf+B
Vyb7jzfgu5L91uvwncn+5jV4RrJfWQkPg4+CZ8Fj4ZPgBfAp8JHwZfAQ+DB4
BjwzOUZZBZ8BD4KvhsfDJ8OL4AuTfcxt8PnwFHgZPBTuBc+EL072GbfDg+FD
ZePgk+CDZLPgAXAX2Tv4BLg9fAF8PNxOtg8eCHeV7ZO/gLvJ9sEnwz3hS+H7
aZ9hv3zP/H2Q245sYr4+ym2bPgvf5wjOmah9DbeFh2a+dm/43MzXPhKelPkZ
j4InZ94TM+F1cP/cdmMQ7bFa//BOXP+vsu3VV7T9tJa093PHXbIth/PbOvDO
cC/FLGF7+FvZ792D/gmZ37s7PB5uBXeCR8L7wp3h0+BX4ffhirQvcbwL51of
HB/AlWif0mf4L85/An4F/gN+EX4HDtkkjjbwEPpfgDfAZdpqfP5bv5Ud53MX
2lGZ7V5XeDR8IHwIPC7z/F8G3wM/B79VKv3fCTzP8TaY6Xlz+4aNvPffZdvS
b2SnOfaBB2jfhv1mHc5dzvy+wncv57bvsvPflb1vhsPz6Bsd9r+1OGdVcvw3
Dp4H3w3fBy+GH4WfgD/O7be28LuNcG34c/hTuBa8Ff4Erll2rLia3zaCz8y9
d4dxr7mZ9/op8JWZ9/pQeE7mvX4qPF9znRz71s+99o+h/wL6m8B7wyfAx/Pd
D3xeL/uR+/3WFvZ7EucsK3yTfM3AzOv9WPjCzDbjJHhmZjsxGJ6Vef/1hy/O
vKf7wRdl3usD4Usz25hB8GWZbcOJ8Ax4Enw2fDM8GT4HvgU+Hz4PXi6/XbYP
rBx+ZvnkX+Dv6W8IbwvvmdmWKhbU+Gkv9OXz12X784qy+XA9uIdihszxwfZ8
rk67C8e/Ja/DJsVaHJb7t3215wrfLL+chX93GJ/rFnFFleI8nf8F39ei/xs9
M8cxuZ9fcfhQuAX8K7xT5vtV0r15tu3o7wk3yvxM23AMzu275adOzu3Tfwpf
e9fM1x+Se63+HJ7fP4vr6/2UF+hZG2SOlX8s2e/ofYbTNqStUvTr3MpFvPQs
z/Mm7b+Z7Y7sj/ymrtG4GOfqxbN+WvI76F20fxsX99qh5LFU/xslj3H14vyG
xTmK23X/HYpn2DlzjsS//+dXYuVK75UdDyo3VSxXM/OYVwrnGHl4vHT9f4r3
0BxnRQxVL/Mc6J4NimcbU/jfr8Pvs3vxPNvwuWnm/FfX1zhvKGzUTsW76DoN
i2euUvAPxfPWL55frPfRB61RrdUqtKdx351Kvm+LYl1pPt7KnRttpm2VOQZt
VrzDHsW8VCzO1+/PKGKPr8LxsuLm7Yp50VrWOAzgnKe092nfzK0HbMqdG2pM
3lXMkPvZdJ2xuWNd7S/dp0Vxr965Y3XZOsX3ivM/4VqHh32cfH2PsE+RL+4e
9iny70fAh5fs948M+zvFG73DflBxyN7F++o51LYquFnRrz1fN5zfjef8Dblt
+dcay7J9Yh/O+zx3HjKh8JXKE2VL387tJ7/KHcfrHWUHjwr7XMU8dQpNRv7z
+9xx/DmKE8P+VHaxUdifnq2x53Nr+GTZnrDNOVd7K/w8ExVvwo3gs3LHd69p
XjLHg0N0Xzgl6xeKDzuG/a9ij05wx5Jjlc5hX6w4pAfn9oXP57ddwr5Ssc2o
3OvrHsVNYVut2En5UGTWhn4pWweQDvVr2XnTh/zXslhjWmvSQsqZc+YIr+8y
bdtwDKN4qXX43afCLcP+ZbLmEW4JT4L7hp9TcWm/sF9Q/Nk/7C8Uow4I+wjF
eyfCA0qOFY8J+y/FtwfDB5ccyx0b9keKaZUASgubBu8T9unnae+E/Zdih99z
50tTaA8o+zpn8D5twnGI4r1DwnGF4ro6mffRlmI/1Sn2lOyN7I7yx0fDutlD
nP9sWDN5DH4krKE9CD8T1k8ehR8Oa24P6F2SdQHFCYoRXpStzqxTKBd7jv4X
4YfgJ+GeybqDYomXw3rU0/ArYU3mGfjVsJbyrPZ6WL96BH5aawF+GH4urPM8
LjsQjl2fhyeE4wflWePCcY5yvRlRxAPwNeFYS7rOwnBcqhh7bDg+UZ74UlgL
egoeE45VlCdun6zZKd+5IawRKYdSfnaBWPYlWS9QvjZJ9rHkXHJkeI8ofxwV
jnmUVy6CZ5ScBz0E3wXfD98FL4FXw1dwvVnwvVz/+rL1qGfgufAVmgt4ATxX
YwVfCc/WdeBl8E3wK/Ct8FL4Vfg2PSP8n8xjoTFZD8+BL4fvg2+Er9fYwjfA
izWn8BKNgeYIvhqep7UBXwMvgJ+AF8FXaY7ghfB8rSu4Y/J1lVfexjsuLDkf
vDWsxSnnWh7WypRDKQfVmLzLb1eGtbU1ueNTraut9K8K62xr6b8vrA/fm1s7
lp1QXLqZ9uuStbs+uWMnxa7rOW6F19F3T1invQe+N6wrroeXwHNKzvH3Tx53
5cLKiTVHL/AMH4XzBeWVH4TzBeWSH4Z1TuWY9cO6inLz6mFtWfH8+2GNVPnp
e2GN9NXc8ft7cAXammGdWXl0vbBWo7y+RliLVr72bngPvsJvD0/W5hT/Nwxr
OMr99wjrzH8qzgxr4H/JP4a18b8VI4R1GOkSQ8OxrrSOQeFYV5qG4sTaRdzy
Ttm2RDp9k8Jeyb/sWPga+aBDMo+5tKxuhT2W5tmCczrA/9I2D9cF/qFtENaa
pHU0DWtE0md2CetC0kkOLvyAtO6DMs+tNLeumfU56Wy1wpq8ctieYZ28Es/f
Ae4ls6s5DdcgMrh9uH6Rw+3C9YiAu4XrFxXgA8N1jTJ8UFirrwi/FdadXoBn
wueWrAVJy9H6eZDn2jNZl5S2MydsN6QDDAvnINKFNoT185fgO5LzUq2H/cJ1
Cgl+g8O1gB3gPuE6QmXFBmFt+UV433C+Kd/RKbOWL32ydjjmUR7Xi+ME7QvO
Pyxcm9hGcUW47lAFPi2szdaEB4brDtvDJ8Aj4e3gIeF6R1X4lLAGWA0eHtaE
q8MjwjpqDfj25Dxca/X0sCZcWzYhOSfXu9dLrnnspH2cXPNomDteUu6gHKJ+
cq2lUe64SPmF8ozKhd6iZ2iQrEvunFs3aK54mrZ/sh+VP22YrF83hqeFdeDd
cudlykF2COcRygl+1HnJWvaunDM+rEPWlU9P1hoUP+yXbItbwy+EdfIempdk
O7s/3CbZhraFf8itq2pvblNoR5rf1sn2vQ38S24NV/vlr9w1La3Vn3Prudo7
v+XWUrWef82tpWrN/JG7zqR1e0lY926q9RnWw/Uu08Na+u7weeG8VeN/flhL
1/hovysnTPSdGc55d6R/cljn1xwdWsQbFeibGtbqNf5XhH1W89w5rDQfaT9T
wjq/5nHbQjvVWupe5Ee6l3Jnxc7/KM8O59f1OKd3ctysOFm5Vd3ivrPCfnOP
3LmzcidpJ5eHfdyeuXNV1ZwknF+qA2yWOy9WrKiYcefkWsUu9DdKrlU0gSfy
3UTObwCvCddQOsMXhmsQOmd22BfvBV8UrkHoOgck+8gD5ePCPlrz2zbZXx4g
O5PsU9vBfZN1N8XkT3L+k5zfXXs/WYdSfN40WXfQ8/dKrtP01L5OrgkdCu+a
rFNofpsk11q0Bv7NXQeVHdslWVvX+j8mWUdTDJwl13RlP1WT0j5YKt00XIfS
vdaG601d4DvDNaOO8Dp4HdxVNjO5znQQ3CO5RqV36Z5cizpEz5JcrzpYaym5
9qO9syJcn+oAd06OaTTmXZNrTrp+t+TaVTf48XAtTNfpkhz36NnuCNe22sPl
5Nqz7N5r4bxGY/VguEam59wrubbUQjYmuf6kNdwyuYa0D/xT7lqFfGiL5DrT
3trTyfWnlvBuyfUwrckfc9cz5H9bJcd5+9G3e7JmpPW5T3J9a1+4WXI9TGtp
7+R6VSu4fXJMpjHpkByracyfCNfpNJ55cg1ePqJich1adjuSa/ay/0cl64nK
B49M1tqU61VIrjHLF/yTu0YuP1ip0MPlCzolx5qd4COStVrltn/mrrXLhz4Q
rt9pXv7O/XcA8r/tkuNazYVqEdJIlMcdnZyXKm9dHa5d6voLkuu4yk0WJtd+
lBdckVzzVixXK7nWI7u0KFnjVh6xIByjatyuCseomjvpCfWK2LBfsm6r/Gt2
8t8WKLa8MrmurJhwTnJdWbHivHAMrPlVTUY5p+rwc8MxudbMDck6svKdy5P/
RkFxrHQSaTnS1W5MrosrD7opWYNWHrQkuY6ufKRKcu1J/rRqcv1Ffrlacn1K
Wm7N5JqX/FGN5DqXNOHjknVn5bm1k2tSsp/Vk+tc8r/S07MiR94uuVYlfy2t
d3PJNc+r+e7qktfk9cl1feV314XzAq3hQcm5vfLZa5Jrcsofr0v++wDlbtLs
pBWNpr02uS6u3HNuci1fMfz8cO6gfTQ/uU6v/Oiq5L9pUB4qvXljyfXVxeE8
Rb51XbL+JV1IekLz4l7Xh/Ma+WXp1ptKrtnekqy5K5dcGs6V5JdvTdb9FVMt
o39ZyTb5lnCNWzb85nA+Jbutvw2QhiWforqcNAvVclWvl46luti14TxOudfN
ybq/8uVZyX/Xorzv6uS/LVBuviy5xqDYUvqV9Kq76fsftr49QA==
           "]], 
          Polygon3DBox[CompressedData["
1:eJwtmnfgVuMbxs8zXpsoVEJCE1GyR6WSQpSGspOkXSpRNKwkadNAJauBkL23
7C0ys8vIHvn5XR/X+ePU+ZznvOd73nOe576v+7rfOj0HdRoYi6JYqn+y/l+S
imKe/r9BfGilKJ4U3y2+T9xW/Kr4VfFT4vnixeK54uvFh4i/1kWOD0Wxu47t
qLGX2bT/hMav1/inGm+t8Ro6drT2F2p8uvav0fgBGr9TfKd4kfgq8Wids4/4
ZH2mq/hx8f3iz8VzxB+JD9b+tjq2rT77mbiNuKb4GO2v0dZWvIP4Le2P0ra3
9k/SsS76/G36zBzxdfp7B4tfED8ofkR8lPgJnf+A+AudP1f8nMafEz+o8dni
jzV+qMa207HtNPaBuJl4G/HW4vfFTcVbi4/V/pfaOoh3Fe+g8RHiXbhXHTue
76djy8UrdP024rfEb4ufF98oPl/n1xd31vkniAeKG2t/K523Qvya/n9C48/o
/Pbi18VPip8VHy0eqfPriU/QZzrx/TR+l/hejR8p/kLjx2qsjo7V1NhX4uPE
u4lrid/Ttkr7L+n8W3R+jeh75ztU19i7nKP9F3X8Zo0P4nlrvIqO3ytexTPR
+Csav1U8XOO1mQs65zjx2xp/R/yCxheJ/9D/P4n31PiWjPE3xCt1/Kby+74m
flq8QPys+FnxA+Jrxc/o+o+K1+rzN4hv1PgM8bUaP1D8vMafEa8Pfr4TNT5R
fKHGx4hf1Pjz4l+Cv89L4hfEvwZ//7E6f6x4mM6/UHyHxmfz/DV+hXiZ+BrW
i/hy5lf2/f0U/P1WZs+nn4O/z/a63sbij3S9O8UTxFeIR4svEt+t8+eLXw5e
H0vFU5iv4st43+JXxH+Ll4qXiK8WPyy+VPxm9vP6R3y7+HbxtTw/8QTxXeIb
eL/iSTzf7PX7l3iJ+Ibk8enR17sl+/sv0/g41lP2/a4QXyy+XudfL56m8y8R
z0++/xnR93ur+Fbx3Oi/f3Xy/V4sHiu+Sde7QHxz8PtYJD5ffFPw83hV/JL4
T/Fi8SviF8V/iG8TL8/++y+KrxS/kR2/NoiXie8R3yx+QzxZvEJ8i/hN8dWs
t+S/P0D3M1o8Jfl5XxL9fb8Ub184BhALbk7+/Jzo9/2Ijq0Qf6rxa8QPanyJ
+HaNtxKvFn8ofj36+b5PDBG/Gn3/LyV/v8fF1xF/dL3Hxd8Fz/dHxfeKPwue
70+LHxF/GxxvnxU/Jl4XHK8X6XozxbN1vYPEj2n8PvGa4Hj2YvLze0zj81gf
yfP/oeh4+7nOX639r3Ssj/af0vaw9r8Jvj/iJ+vj4eh4eZ/GbxO/rfGp4gc0
vpj5ovEjeF/J8/XJ6PW5RlxNvL/OX63PfiauWjimEltnJ6+vSdHz6y7xjeJb
xC24v+RccKDO/1Dnf5Ecm8kR5AriPfczL3p9Pp28/u+Pfj/LxQuZb+Lm4nuz
5+db+vwU7l+8TPy+eDrvU3y7+APxjDJ/LWB+6vOHix/OzmcfanyW+Jrk9Xal
xseznsWLxLeKW4of0vl3iFfr/JmsD/EE8T3B58/V+ZPEV+v8puIF4mniWeL9
xQeJDxIfJv5bn006dpk+213H2mssii8VnyhuJz6YTfuH6/wNOv8I8RHiNuJ/
xYeIDxE3F/8jPrXMP7XFy3Wtv8TDdL22PPPkvzlcfFThe/mfeDS5TdxSPEC8
l7ietrOzj7XUWOvoc4OueYnGuunYUcnXPJD1Ff239hDvId5b/Ku4Ie+EWKhj
V2msHu8sOIYTy/dijgc/o2nifdmYX/r8H/r8nqwh5qaOTeXaFcdS1jhrvSox
TzxU3D/5GY0Qtyv87PZk0/4+ut5v5HpxU/F+4t/JfeTY4JwzI/kZniduX/jZ
9hA/rf0fdWyhzt2ADiv1ylrt/6JzGmm/q46t07m/lt+/m/g78Tf83cJ6Cl31
k8YbFNYH32r8W+6jsB5CF/2s8Yba76L9tRrfSH9zBu9Cx05MzomvBa8pcuWm
zFlxP/HJyRrt1eA1gnbbRDxL3Fd8KrlLPFPcR9xdXJ8YQOxlzos3E18r7i8+
Xby1+DrxPDRCxXP4leA1xNxmDl4o7lh4bhZcIzj+fMWc0baReEfxD8xRbRVx
LWKk9rfQ9eaIB4p76bObi2eLB4h7ltf7Uf9tqe1fnr3GJ2n8dHFHjW1DDhMP
EfcVf82803517gdNwprU/4PEvZNj6uvBa5pY20B8f/CanZT8jFl7J0c/+21Z
wxofpmODNbZbstaqp/Ef9N13T9bS9cU/indN1o51xd+La1acG8lR5KqaZbys
Ga3l0KDo+62i4+f2aCCdP0LHhmlssI41ETfQdo72t9P4Qu0P1/hQ5ko5X/bS
53/W+A7kfI2P0rFR3Asxj1xPzubeiaHiS8iR4p3Ei8nV4ovE3bLnY53o+dc1
e/7uEj1fd0RD6PwLdexCnV+LGCgeLR6drJnJDztEa+laZbyvFa1Vd0HToEV0
bFyy7kR/7iRer3PqoNGIpeLxyTUK+WHH6NqldsVaZmxhbTdC23Bt1XW8Rrkt
0vh5hcfQ3ejvUOpTYvJzwTURsfqqaC1IziJ3NSEnB9ccc5JjMrGgQ3SsJiYT
W46NjtX7koODa7J5yTGR2HpMdKzcR9uTwTl9ZvKcZa10LudyNTSXxs/VsYEa
269i7Ti/sBZjjZIbToleu421PR5ck03XWP9s7Y0G7639BmV82RNdnq0BmDub
J2uDqum/JVVUic7f1Dxfs76ia6FqyXXm1tH5mRrtc/H20bXb7uR0tKqOXapz
65Ij0bbiy5JrrI20XzVabzUq42NjYmV2DaiPFNtE53tqzDXi7aJrz/ZoCvG2
4k/Itcn59sZovUsNRj1ThznK2ouuh1hzrD1yBHPnsujcQY5grl0anTt4Zsz9
CdHPkpzE3B8XnauoKakd0EhoJXIUa+mi6NxFjGDuj42OHeSogcE5mdxFDuHZ
XBGdW8hprL3Lo3MdMZa1MiY69pJfyb2txKeKW4tPELcVnyZuI+5MrhWfTvwV
tyF3i08UHyA+klwn7l5xPibXHyLuUbEn8ENwjYlXsJ+21to/UOPdKq4pvw+u
Sak1m2vroP2WGj+54vlMrj9afGbFc5h3PTF6brcVdxW3F/cUtxAfR+wVn8L1
xV3E7cRnlPqSeh0/A715f7JfsCRav7GG0ApTotcWMYVcMDg61jDniI0XRM9F
Yhy5alB07CNmsJbOK2MJMY/YPTI6FhLziJ3nR8dCYhDaYUQsY1OyXlwYXY8s
S9aTC8QTK46R5JKh0bGTGETuGR4dm4iJ5LIh0bHyMPGx4hbik8gn2eeTU8mt
+AmPi++J1p8PJ+v1O8XTKo5B5ObJ0bGJNYl2JsayVh9Lrh/ujtajrEFi36jo
tUkMQTvNjI4t5CC0AqYSuem+5PpicXQ9tSK5Xrktut4itqIV+kfH2EeT6/W7
ovX0I8n1zPJovY1HgFewi47V1tgx2k7W/nEa71Wxx/E/jb9e2PvgHPyeXaM/
i0dCzCam9dN37SzuEXxO4+Q1j9+0W3QsYA301Pj+hdcGnhHeEefsk+xJ4U01
ETdJXiNnig8ovHZ2TvZbdtb1OmisGfM2WCOiFduWWuWPwnqPNdUrWPOy1irE
POKr+Ej9v5G4hv7fgjUb7L9QG/2X85M9IbQfMZpYjceD14Nmr48W0LZFGc/x
Vo6t2J/Cr8K/SeQ08VbikDynzhEfXniuEUP6B2t2Yks91rz2G+paHStek/00
3qLwWmWN9xU3L7z2V6EhxBtr/56KnznXbhL9LrhHnnWj6HvnO/As94j+bl3E
vcQnivvxXcVniruJ+4q7iXuLe4gH8N3FPcVdxedUnB9PF58g7iPuID5FfLz4
LOYX31HcUdy7Yg+OWps1xFqipqOWo6aj1kPPoZ1P0vkDyR/i08SdxGeLu4rP
EncX96/Yk8N7wYPBu2IO8WyaRs8tPNR3gmtkvFVqZLxHYhqxjTnGs903eu5R
M34S7NFSS/6KJtb+v9p+i/YYvgz2NPEeqJE/Dvb8qJ2pcT8K9hypffFAqdWp
kamV8YDfDfYs8IaZI6y96uXc+TA6vxc653ftvxudz6uJN9G5F+h9Ny68xni/
aLzO5XxE+5GD0dHoaXIznhfe17fiDtQvusYX2v+BdyY+Ttvawjmc89dq/MvC
Gr5zdg1FLfWM+L3smLW6fF/Esm20fVP4ntEmHbV9V/ie0SLHa1tXWDOgHW4v
3xfx5ONkjwYvDM8C7+aWMp+vLOyN4hH+UuZ3vFA8RbxFPD+8XDw/vD88P7zO
WeV8Wl7OLzw7vDs8qg+TPUG8QTwYvE9iIl4DmoVYSUzEiyCnECunlu9vcTlf
eGY8u7o6dlZ2DMbbwtMgNqPZ0G7UT29r/09tgzTeStws2T9fFf0OeBdzy/nI
fEK/UIN+r/E/C9em65K1NjUFtQWeHN4cHuIHqfSQyvmMt4RnhHdEjMfrQjPu
X8YztCSeDN4ZOQOvZkG5Hp8o1w+eF94XOQbvF88L74scQu8BTwtvCw2Ad48H
tq5cz/Qy8JzwhslxeFHU2Oui4zG1Nx4cXiIeHN5cRXyV+AzWuHj7bD2AR4BX
sFO2nqMmI/9tl53/qSGpJWtn6ztqGvTGLtn6kJqHfF4vW99RQ6Ef2mn7rZxf
K4k1yX+7l+5xK41Vz9YfaHy0fo1s/UFNSW35R3KuIedQL7bWsa+0/5COPaSx
jXWsU+Eam1q7VfK7P5KiUefunK0nqfnQP/Wz9RkaHX1UM1svUTNSO+6QrQ+o
Mak1G4gvL6zh0Qt1s/UxNSN6afds/UpNhp7aJLs+xgOivtk8+/tSk1PP8My5
3y7R72KrbL2BB4EXUSVbr+FZ4F3wHS4K/gzfbUuNn1PYo6De2SJbf+CBUI/j
CW8o4/NHOn/T7PoIz4x6bOtsvYiHgZexW3Y9QM2JvqsjHlO45kW/jdE1BovP
1f3uLN41u16gxkTPVcsex0PAS9hM3KOwZ0c9uE223sOzwLuomq0P8TTwNurq
+nXFDXT99fhBxLTgYzsl91x+ivao6MVQ4+Dtzy9c+6BB8cbx9NGm9BSoDxeU
+Y36FT8NjYhWxHPHe8dvoDeBJ89cZ85Ty+Dh4OXwnfoke6zUv3PKfIInTi8E
DxSvnB4CvQn8NnoLg8SXB2u6k5Jz5vjgGoBcSk6/OLhmINeTc5krzBlyMT0E
ehnU2/QW8IjpReAHUn/vqGcwsnANTy1PDwK/Dw2LlsVjxWulh4FXi8f/X2+j
cK3Xp1yDrD2+6x3Ep+icRG5CY4wJrrHQHndX7FH9xf1p/K6Kc/QnZT5B868M
7lFQC5D/PonuKdALokf2e7AnT++Md3y6uFnhdz9Y4xOCNcxpyZ7sn3gHwV4t
Nd7g4JqM2o+a7IxgzUatNlw8OVgjnZPcw6J2oIag9qAH8HVwzUBvgB7OQ8E9
Gno71BCrgmsYagvy78/6+xsKe5v0cJYG+yn0dlgDS4LXCGsDDTcuuIZD26Hh
xgbXpGi7tWVuQjP2Kv0GvL+GwX4Ven6LMufQC/2Ov1HYY8ZrxrNA69YP9pvR
nGhPNDf5kHzFtfBw+PwnrPlgDXUK3lTyu8NDYv2Q48h1eI49s/U92gVPsEv2
+/4x2qNlnHfAu8DjQu+cpi0Fe2B4YTwjntU/zPfy/rnXRtr6ZucgchGe5hni
38V/izcWn5ld09KbQK9R61JT0cuiB0WtRU08NLiGp1YeVXGsI+ZRe6FxLwiu
qdG+aNZRwZ4BWhaNjH+Pp4R2RiOfH1zDo50vEE8P1sDnJtfw9APwqKjtqclG
Bteo1GpDxFcEa+wzyvVYi5yh/ZHahmp8YrCGPlN8nnhKsOYfIB4hvjpY8/dL
XsPUjVyDa52r/SuDNf5ZGh9Wce4gh7Bu6eGRK8gZ1Krni6cF1wxDuAfx1GDN
Poh3n7zWTgv2X4mnVcp30B3tk+wN4RHht47Nrleo4ajlWjLnCmt0tHrzbO2N
5kZ7fxmtz6jp3tf+Rdlrk5qT2pM5inbbNHnufqFzvi9cE76n/UOztTk1A7XD
IdnaDw2IlueeuXd6HnjJ5LSPtf9mdK5rkV07UBNQG6A5PxK/Ea1FD8/WpmhU
ap+laDZipcYPq1hDLCWXRGuLOdnPnmfOsz8se5waglqCmEfseytaW+OvUT9T
T1N7H5GtLdGY1D6Tk2PFeJ3XSNxU47MKe574Q3uKJxfuAeGvHZTtvdPDoJeB
nqN3gof9TrZepXeCZ/hutgdNL6RBuR73yPaH8Ozx3/bKzg3kCPy9xtm9JHpG
+H8Hi28q7Pnj/bfO1qZoVGpH6m28YWpqauu9s71VelL4dUOzfxtCDU491Spb
m1GzUbs1yfZ26SHh9+2T3UvCo8Vf3D87V5Oz8V+GZNdO5CRy00TxMYXXIGtx
anZsJeYSe9/ReZsVroHWaH929tpjDbGW3taxTQvXRJ9p/5Ls+hMPAC/gYx3b
pHD+429elp1rhgT7iTdkryXWGGvt+uy1zBpjrU3JzpXEfGL/Zsm9QdYXfv0H
0fOfNcJaWZAda4hhxLKF2b0n1jRre372WiYmEZtmZGsFNAJaYV52riOGEEuu
y44lxBhizRXZ/iYxjFh2cXZ9jqeBtzEtO1ehSdAml2f7pcRYYu2E7Fh7brBf
OStby5CjydWTsmMnMZfYOzk71hJjibVXZsdKYiyx9qrs2ExMJjZfk53riaHE
0muzYykxk9g5LDsXoQHQAuOz/RU8GLyYceLDCns6eDvUBNQG+Ff42+20v75w
j41+GD2oU4NrCHpT07O1GBoMLTZTfFJhzYZ2+zM51vAZPntAdq+Qnh69vfb6
v0qwB4W/RA+BWEnMxOs5UvxUYU8Zb/lf/b9JcI58TvfzabJXxXqhn8AcY67x
DvCyqZFYP49G1068A94F7xQv+ajsWp6aHi+mmbYXgmPadRpvm11rUdPj1dM/
pRdLT/bv6H4rvVRy+F/R/UB6r+R4njkaED1QrVx/XyefT2+W/gN+3rbB9TTx
+5vk69Obpf/BelxTeM21CvYUuJ+XdfwYXe+r5L+HZ4J3wvrEC2ENtuQdZ2sX
NCZaEw2CVkGDok2+LbUPviO1PfGY5/FLeT5eAP0cNA/91HY6543CnireasPs
WoCagH5Fzu5f0ROnN56y+1f8BoDfAsRsLcB6on+/Ifn3CWcF9xPxDDsFe6R4
ievLeobfENKP+yG5H8pv5uj3/ZjcD+U3afT7qHHQyjtF1z5jsv1DPFi82Ir4
6MI9d3rvPMNK9G/YeLYbZWsb1t9/vz/Irn/pudB7oVl1hP4bENzPJwc9GJxz
yE3/JP9+ondw/6lRdq+Xnjf9l/8l/37i7ODfKzQr9cQB0V4LnnCL4DmDliSn
vhecM8m1fyd7wawR1sq/4kPFfYJ/b8A1uTb3wG8j8FhWk/+ivZd9s3uR9Bzx
9/kMn+We+O3Cgdm9fnr69Pbx73YP1hifR78j3hX3QC84J3vRnIO/1yy7N0nP
s2mprdHqaGT67/jd5ApyBt4la4xnNzV67fHMeHbMCXp5+NvVgz099FCb7N4S
PSR6Sftlr1V6ovRveCe8m5aF/fT/A7byXH8=
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt2HW8FdUWAOB7zz1H7KcS+ixUFBUUVEoaKUUQlBQQUEpR6e7ukkYpKUFS
GkmlJQXsfLa+UIyfrc9vOfePxd3r22vmzMyZHYdrW3eu3ymVlZX1jsiIRems
rI5gaXZWVl95v5ysrGJsFFvLhrOprD+7gz3OKrFibDy7n41hD7E6rB+7nXVg
FVlxVoQNZsvZQDaBFWRd2NOsExvI7mSz2EtsOlvMbmNj2Do2kk1nxdlo9gIb
waaxu9hydpItZRvZBPYAG8tasLpsHKvHRrPm7D52LevG5rAubDDrya5jzVgx
dg07nz3ERrKmrCmbyOqzcawlq8d6s5vZI+xh8W2cn3cVz2o/ri+/hz9M+y7t
vmruc2xF/QNYCfYEq8xuY+exhmwgq8/qs76sKGvDSrMb2dmsDuvJarFa7Bx2
H+vF7mX3sh6sIGvACrNG8uGiKuvH6rLK6vKxdnE+19pB/rgYwaqx/urqqavC
hrIqrA+rwyqxkexuNpgNyk5eti68s1igr4O+fKys9mztl9XMULZE/wWsBRvF
mrFmbBS7hw1hDVj1uA/RXSzU94S+As43RLu8dnd1NdWV0X8ha8k6628uf0jc
ykayNeqGqZvC+rAirDUrxQqzf7BWrItjW8kfFuXY02yPupnqluY+m3hGc/W1
13ex+jHa92oPU9dIXU3938f7xn4T6Xg/1Nwo+skXy3urG6WmG7uU1WYF2WWs
ApvPDrK5bCUrzPqyRawXG8muYz3ZfNaNDWU3sD5sIevJRrBCrBdbwLqzYext
do6/7/LPWVt5RbFAfkjdPLZK//NsAtvHZrNZ7LR4Tfsg/168pWaFmKp9WN0r
oqTnchPrz5bI+6gfHd8ju5rVZw+Ir+Rf8vzsE/E/dQ+wkmKyfKuaiWyumlVs
OjvKFrAFbDkbz/ayWWw2W8mmsSNsPpvPPor3jb0vYl68SF5F3TLJq+qWsA1s
KRvINrGxbAzrJDqK+foe05fXvU3SbqA9Xl0rdffrv52NZevZKDaD3cKGshVs
MJvEerFCrDkrzgqyUuwp9iKbxOaxO9g4toGNZjPZk+IJMU/fo/oucS1jtWtr
D1fXWN3d+suwmWw3mxbzPyvNZrBdbCpbyL6I8c8+Fv+N+4g5V9SSD1XXkNVQ
U5QNYc/HOGcT2XfiGvaryInnEPOhGCRfJh+gbryaSmwpO84WsXXsetabPct6
sOGsPJvHDrA5bAV7LuYstp1tE0Xc71e8APtUfB3zpJrFood8lZqV4mp1Jdgk
tkU+Qd0cxy1jI9gONplNZkvYALaRjWFjWWX2HDvBFrP17CQ7xc6N94i9x85l
deW91dVmtdkJ9io7W7wba3BOcn3d5XNjbMX66PpeYAvZ2/K3Yh1lk1mjVDKX
xpzagd3NdsY4lW93vsPOt51tYP9hu9guVo2tYW+yVWw7O8QOxQufSsZsjN11
bJH8HXWr2Wo2h7VlE+P9y07WgqpsNXsjnqm6beoOsn3sd3aCnWDr4/nHvbI1
bA37UP5v7Q/8rRh7iezkuxyWSr6f+J6G+IyfYo6ONVb+nb6maraKF7S/ZF+I
6upeZOvYV/Id6nc4bjNbGfMG28K2sC1sVbwbbCvbyl5hr7Bs8Tp7jf0YY1P7
QXVn+IPxPMUS7ffYWn1r1axmz7BTcf1sGdvG1sf9sZ1sJ1vD5rDTbBl7LieZ
E6ekkvc23t8R7mMtmxvfhXy5uuW5+4ibUsl8+Pe8qO4wOxxzVTx/da+rO8qO
xnoScy57M9Y49oP8T8edYi3kL4sd7Ad2iB1St4ftZj+xH2Pf4DP2RS37RX5U
3VF1tdgB9g3by06xQaws6xrfBSvFBrI7Y71kncUv6eR9fjaVzP+xDozzGS+x
7bFOyA/GmpF7LbtSyXcb3/FcdcfYsVRybXGNyzPJe7A2lYyNGCNT2W62jX0n
P+B8B3KS8R/zwGcxluLZppN9Sc1Ucm1xja0cu5/tiflKfkz9McfuZS+xn9kR
doTtYBtjPmS72W52hB2JeS7GF3uDHWB7Y41Xd5wdz0nu4zg7S2REHZ+7M95p
7TPq9qnbr64m28L+xTayvWwXe5F9y/azfaw628Q+YOvZy+wetj/mPraHnWQN
2RntL+L9jfc8nXxHZVLJ3jT2qE1y55fGqWSMx1jPsI3sefaRfJNzbHa+4+wE
y5NKfkO8zS5LJ/u5vplkj9std48Ve62Zufunc/S1lLcQM9LJfuxsdrV2Z+3Z
PqOj8w3QfxWLHymz2JOsP7uCPclmxNzHerNLWGvW3XnayduLn2Ovw+qqK6Su
UKwJuWti70yyXse6nZe1YT3Yo/LHxLfiSlbBsQUce5X8l9hjsXrsena9/Fdx
I7uf3cBukJ+Ja2TlWH52pXy6z2jOprH2rAmbxpqxqawdaxx7TNdwYSaZa2O/
fZH2NdpdtZ+JcaRuUO79xX0+k3vtF6hrLX9EzGaPsPNYW3kb8XTu8zmfXZ5O
9sj9tXvGXiMn2cvGnnaWvodj/dJ3ce55umWSc8S5nmJN2GTX0tq1NGAX5R7T
NZN8flzHFPYge0pdG3UN2VTWlE1hbeO3BvtnOvkN1C+T7N9jH7+JrYj9hrrN
6jaxr6OWlWZ52eXy0+pei3sSH8Y6wv4vbksla0WsGbfK/xTFU8k8HvP5LbFH
cmxh+bna58d+SZ4SFdS142XVleW/x9rDGse+ghWRn6WuOuvIqrKq8dxZRv5H
jLkY/+lkPx/7+t9jnog5OtZ8cTLGQIxBx76bk+x3r5JXVltF1PUsBrNy8ezl
NdSVVpfNSrNWrCQrybJYKdaSlZCWYB+LC1kJFiWX+KeGus3xnNgGtoflsIqs
PSvHyrHPxMWsLDuL5ZfnTye/Y3plkn1l7C8/je+dlclO/u8gn/yUutPx3sVc
xN5nn8Q7LS+V/felZuWV59GowTqxaqwauzSd7Jv7ZJLfhfH78BtxObtTXT51
V8jT6iqxR1l5Vp59HuOflWd5WAF5Rl1l9hirwCqw32I9Z43Yzexm+R+iGGvC
irKi8r8AEDUkJQ==
           "]], 
          Polygon3DBox[{{1137, 531, 320, 319, 736, 1102}}]},
         Annotation[#, "Charting`Private`Tag$166161#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0rkuRFEABuAztrEvISEh1k6CQkSEkYhErI2SUFBRUBpeYEjUwwsML4AX
GF7Avi+lUgiV8F2K/3z/yU3Oufec27KwOr0SCyFsS7MS9XrDK6tyQ6hkHZui
5+xkFxMc5CSnOMs5zsuyvsF1bnGTu9zhPvd4xEOe8JizeSF8s9XeZ2xkofzI
uXnICeECMV5GU14xl9fM4w3zWSC3epx3LOQ9i/jAYj6yhE8s5TM/+cM2e76w
iUXy7B1PzU+ZZZYHPGCGGaaZZoopJpnkmizpM5zhBCc4wAF2sIOLvj9ur0Z9
WW/XP/QWVrCB76zguJTrbzKml7GWo1Kq13BESqJzsX61XqwPR9/Doehso/tj
QuJ6PwvYx3z20muEHloidMf+riB8RUPs/1/5BZ/qNvg=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{785, 1101, 1242, 993, 784, 1243, 994, 786, 1244, 995, 787, 
       1245, 996, 788, 1246, 997, 789, 1247, 998, 790, 1456, 1102, 1137, 1455,
        1103, 1098, 1248, 999, 1104, 1099, 1249, 1000, 1105, 1100, 1250, 1001,
        1106, 1236, 1251, 1002, 1107, 1125, 1460, 1241, 1124, 1003, 1108, 
       1237, 1252, 1128, 1129, 1136, 1004, 1134, 1461, 1131, 1132, 1126, 1127,
        1133, 1005, 1130}], 
      Line3DBox[{792, 1138, 1357, 791, 536, 793, 1253, 1006, 794, 1254, 1007, 
       795, 1255, 1008, 796, 1256, 1009, 797, 1257, 1139, 1358, 798, 1109, 
       1140, 1457, 1118, 1110, 1258, 1010, 1119, 1111, 1259, 1011, 1120, 1238,
        1260, 1012, 1121, 1239, 1261, 1013, 1122, 1459, 1112, 1014, 1135, 
       1462, 1113, 1015, 1123}], 
      Line3DBox[{800, 1141, 1359, 799, 1142, 1360, 801, 548, 802, 1262, 1016, 
       803, 1263, 1017, 804, 1264, 1018, 805, 1265, 1143, 1361, 806, 1144, 
       1362, 807, 1145, 1363, 808, 1266, 1019, 809, 1267, 1020, 810, 1268, 
       1021, 811, 1269, 1022, 812, 1270, 1023, 813}], 
      Line3DBox[{815, 1146, 1364, 814, 1147, 1365, 816, 1148, 1366, 817, 564, 
       818, 1271, 1024, 819, 1272, 1025, 820, 1273, 1149, 1367, 821, 1150, 
       1368, 822, 1151, 1369, 823, 1152, 1370, 824, 1274, 1026, 825, 1275, 
       1027, 826, 1276, 1028, 827, 1277, 1029, 828}], 
      Line3DBox[{830, 1153, 1371, 829, 1154, 1372, 831, 1155, 1373, 832, 1156,
        1374, 833, 1278, 1030, 834, 1279, 1031, 835, 1280, 1157, 1375, 836, 
       1158, 1376, 837, 1159, 1377, 838, 1160, 1378, 839, 1161, 1379, 840, 
       1281, 1032, 841, 1282, 1033, 842, 1283, 1034, 843}], 
      Line3DBox[{845, 1162, 1380, 844, 1163, 1381, 846, 1164, 1382, 847, 1165,
        1383, 848, 1166, 1384, 849, 1284, 1035, 850, 1285, 1167, 1385, 851, 
       1168, 1386, 852, 1169, 1387, 853, 1170, 1388, 854, 1171, 1389, 855, 
       1172, 1390, 856, 1286, 1036, 857, 1287, 1037, 858}], 
      Line3DBox[{862, 1288, 1038, 860, 1289, 1039, 864, 1290, 1040, 866, 1291,
        1041, 868, 1292, 1042, 870, 1293, 1043, 872, 1295, 1296, 1044, 874, 
       1297, 1045, 876, 1298, 1046, 878, 1299, 1047, 880, 1300, 1048, 882, 
       1301, 1049, 884, 1302, 1050, 886, 1304, 1052, 888}], 
      Line3DBox[{887, 1051, 1303, 885, 1403, 1185, 883, 1402, 1184, 881, 1401,
        1183, 879, 1400, 1182, 877, 1399, 1181, 875, 1398, 1180, 873, 1397, 
       1179, 1294, 871, 1396, 1178, 869, 1395, 1177, 867, 1394, 1176, 865, 
       1393, 1175, 863, 1392, 1174, 859, 1391, 1173, 861}], 
      Line3DBox[{890, 1186, 1404, 889, 1305, 1053, 891, 1306, 1054, 892, 1307,
        1055, 893, 1308, 1056, 894, 1309, 1057, 895, 1310, 1187, 1405, 896, 
       1311, 1058, 897, 1312, 1059, 898, 1313, 1060, 899, 1314, 1061, 900, 
       1315, 1062, 901, 1316, 1063, 902, 1317, 1064, 903}], 
      Line3DBox[{905, 1188, 1406, 904, 1189, 1407, 906, 1318, 1065, 907, 1319,
        1066, 908, 1320, 1067, 909, 1321, 1068, 910, 1322, 1190, 1408, 911, 
       1191, 1409, 912, 1323, 1069, 913, 1324, 1070, 914, 1325, 1071, 915, 
       1326, 1072, 916, 1327, 1073, 917, 1328, 1074, 918}], 
      Line3DBox[{920, 1192, 1410, 919, 1193, 1411, 921, 653, 922, 1329, 1075, 
       923, 1330, 1076, 924, 1331, 1077, 925, 1332, 1194, 1412, 926, 1195, 
       1413, 927, 1196, 1414, 928, 1333, 1078, 929, 1334, 1079, 930, 1335, 
       1080, 931, 1336, 1081, 932, 1337, 1082, 933}], 
      Line3DBox[{935, 1197, 1415, 934, 1198, 1416, 936, 1199, 1417, 937, 1338,
        1083, 938, 1339, 1084, 939, 1340, 1085, 940, 1341, 1200, 1418, 941, 
       1201, 1419, 942, 1202, 1420, 943, 1203, 1421, 944, 1342, 1086, 945, 
       1343, 1087, 946, 1344, 1088, 947, 1345, 1089, 948}], 
      Line3DBox[{950, 1204, 1422, 949, 1205, 1423, 951, 1206, 1424, 952, 1207,
        1425, 953, 1346, 1090, 954, 1347, 1091, 955, 1348, 1208, 1426, 956, 
       1209, 1427, 957, 1210, 1428, 958, 1211, 1429, 959, 1212, 1430, 960, 
       1349, 1092, 961, 1350, 1093, 962, 1351, 1094, 963}], 
      Line3DBox[{965, 1213, 1431, 964, 1214, 1432, 966, 1215, 1433, 967, 1216,
        1434, 968, 1217, 1435, 969, 1352, 1095, 970, 1353, 1218, 1436, 971, 
       1219, 1437, 972, 1220, 1438, 973, 1221, 1439, 974, 1222, 1440, 975, 
       1223, 1441, 976, 1354, 1096, 977, 1355, 1097, 978}], 
      Line3DBox[{992, 1117, 1116, 1458, 991, 1454, 1235, 990, 1453, 1234, 989,
        1452, 1233, 988, 1451, 1232, 987, 1450, 1231, 986, 1449, 1230, 985, 
       1448, 1229, 1356, 984, 1447, 1228, 983, 1446, 1227, 982, 1445, 1226, 
       981, 1444, 1225, 980, 1443, 1224, 979, 1240, 1442, 1114, 1115}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{307, 526, 1243, 308, 536, 332, 1360, 547, 347, 1365, 562, 
       362, 1372, 577, 377, 1381, 592, 392, 1392, 607, 1289, 407, 622, 1305, 
       422, 1407, 637, 437, 1411, 652, 452, 1416, 667, 467, 1423, 682, 482, 
       1432, 697, 497, 1443, 712, 512}], 
      Line3DBox[{309, 527, 1244, 310, 537, 1253, 333, 548, 348, 1366, 563, 
       363, 1373, 578, 378, 1382, 593, 393, 1393, 608, 1290, 408, 623, 1306, 
       423, 638, 1318, 438, 653, 453, 1417, 668, 468, 1424, 683, 483, 1433, 
       698, 498, 1444, 713, 513}], 
      Line3DBox[{311, 528, 1245, 312, 538, 1254, 334, 549, 1262, 349, 564, 
       364, 1374, 579, 379, 1383, 594, 394, 1394, 609, 1291, 409, 624, 1307, 
       424, 639, 1319, 439, 654, 1329, 454, 669, 1338, 469, 1425, 684, 484, 
       1434, 699, 499, 1445, 714, 514}], 
      Line3DBox[{313, 529, 1246, 314, 539, 1255, 335, 550, 1263, 350, 565, 
       1271, 365, 580, 1278, 380, 1384, 595, 395, 1395, 610, 1292, 410, 625, 
       1308, 425, 640, 1320, 440, 655, 1330, 455, 670, 1339, 470, 685, 1346, 
       485, 1435, 700, 500, 1446, 715, 515}], 
      Line3DBox[{315, 530, 1247, 316, 540, 1256, 336, 551, 1264, 351, 566, 
       1272, 366, 581, 1279, 381, 596, 1284, 396, 1396, 611, 1293, 411, 626, 
       1309, 426, 641, 1321, 441, 656, 1331, 456, 671, 1340, 471, 686, 1347, 
       486, 701, 1352, 501, 1447, 716, 516}], 
      Line3DBox[{317, 734, 1456, 736, 319, 541, 1257, 337, 552, 1265, 352, 
       567, 1273, 367, 582, 1280, 382, 597, 1285, 397, 612, 1294, 1295, 412, 
       627, 1310, 427, 642, 1322, 442, 657, 1332, 457, 672, 1341, 472, 687, 
       1348, 487, 702, 1353, 502, 717, 1356, 517}], 
      Line3DBox[{321, 725, 738, 532, 1248, 322, 744, 761, 1457, 543, 339, 
       1362, 554, 354, 1368, 569, 369, 1376, 584, 384, 1386, 599, 399, 1398, 
       614, 1297, 414, 629, 1311, 429, 1409, 644, 444, 1413, 659, 459, 1419, 
       674, 474, 1427, 689, 489, 1437, 704, 504, 1449, 719, 519}], 
      Line3DBox[{323, 726, 739, 533, 1249, 324, 745, 762, 544, 1258, 340, 
       1363, 555, 355, 1369, 570, 370, 1377, 585, 385, 1387, 600, 400, 1399, 
       615, 1298, 415, 630, 1312, 430, 645, 1323, 445, 1414, 660, 460, 1420, 
       675, 475, 1428, 690, 490, 1438, 705, 505, 1450, 720, 520}], 
      Line3DBox[{326, 773, 728, 741, 729, 1251, 327, 747, 764, 748, 1260, 342,
        557, 1267, 357, 572, 1274, 372, 1379, 587, 387, 1389, 602, 402, 1401, 
       617, 1300, 417, 632, 1314, 432, 647, 1325, 447, 662, 1334, 462, 677, 
       1342, 477, 1430, 692, 492, 1440, 707, 507, 1452, 722, 522}], 
      Line3DBox[{328, 774, 730, 742, 731, 777, 1460, 775, 749, 765, 750, 1261,
        343, 558, 1268, 358, 573, 1275, 373, 588, 1281, 388, 1390, 603, 403, 
       1402, 618, 1301, 418, 633, 1315, 433, 648, 1326, 448, 663, 1335, 463, 
       678, 1343, 478, 693, 1349, 493, 1441, 708, 508, 1453, 723, 523}], 
      Line3DBox[{329, 767, 768, 743, 732, 1252, 779, 751, 766, 1459, 752, 344,
        559, 1269, 359, 574, 1276, 374, 589, 1282, 389, 604, 1286, 404, 1403, 
       619, 1302, 419, 634, 1316, 434, 649, 1327, 449, 664, 1336, 464, 679, 
       1344, 479, 694, 1350, 494, 709, 1354, 509, 1454, 724, 524}], 
      Line3DBox[{330, 769, 771, 770, 760, 781, 782, 1461, 780, 778, 753, 783, 
       1462, 754, 345, 560, 1270, 360, 575, 1277, 375, 590, 1283, 390, 605, 
       1287, 405, 620, 1303, 1304, 420, 635, 1317, 435, 650, 1328, 450, 665, 
       1337, 465, 680, 1345, 480, 695, 1351, 495, 710, 1355, 510, 756, 1458, 
       757, 758}], 
      Line3DBox[{511, 711, 755, 1442, 496, 696, 1431, 481, 681, 1422, 466, 
       666, 1415, 451, 651, 1410, 436, 636, 1406, 421, 621, 1404, 406, 1288, 
       606, 1391, 391, 591, 1380, 376, 576, 1371, 361, 561, 1364, 346, 546, 
       1359, 331, 535, 1357, 306, 1242, 525, 733, 759}], 
      Line3DBox[{518, 718, 1448, 503, 703, 1436, 488, 688, 1426, 473, 673, 
       1418, 458, 658, 1412, 443, 643, 1408, 428, 628, 1405, 413, 1296, 613, 
       1397, 398, 598, 1385, 383, 583, 1375, 368, 568, 1367, 353, 553, 1361, 
       338, 542, 1358, 320, 531, 1455, 737, 735, 318}], 
      Line3DBox[{521, 721, 1451, 506, 706, 1439, 491, 691, 1429, 476, 676, 
       1421, 461, 1333, 661, 446, 1324, 646, 431, 1313, 631, 416, 1299, 616, 
       1400, 401, 601, 1388, 386, 586, 1378, 371, 571, 1370, 356, 1266, 556, 
       341, 1259, 545, 763, 746, 325, 1250, 534, 740, 727, 776, 
       772}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 0.4999999642857143}, {-0.9999998571428571, 
    0.9999998571428571}, {0, 0.5}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.869116750458612*^9, 3.869116769747765*^9}, 
   3.869116822542807*^9, 
   3.869118110848648*^9},ExpressionUUID->"f89bf96e-202a-4362-be77-\
e268793559ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"HeavisideTheta", " ", "for", " ", "E3"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Solutions", " ", "are", " ", "imaginary", " ", "for", " ", "all"}], 
      " ", "-", "1"}], " ", "<", " ", "costh", " ", "<", " ", "1"}], ",", " ", 
    RowBox[{"so", " ", "no", " ", "new", " ", "constraint"}]}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.869116448773678*^9, 
  3.8691165446319237`*^9}},ExpressionUUID->"26cb9228-9bd8-4a93-a0f5-\
44f11f90f555"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"HeavisideThetaArguments", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", "E1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8691164560831537`*^9, 3.869116456196686*^9}, {
  3.8691164944421043`*^9, 
  3.869116508381649*^9}},ExpressionUUID->"504839b7-886c-4776-bb9b-\
6a8ef6f79b84"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"E1", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SqrtBox["s"]}], "+", 
       RowBox[{"costh", " ", 
        SqrtBox["s"]}], "-", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{
          SuperscriptBox["costh", "2"], " ", "s"}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "costh"}], ")"}]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"E1", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SqrtBox["s"]}], "+", 
       RowBox[{"costh", " ", 
        SqrtBox["s"]}], "+", 
       SqrtBox[
        RowBox[{
         RowBox[{"-", "s"}], "+", 
         RowBox[{
          SuperscriptBox["costh", "2"], " ", "s"}]}]]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "costh"}], ")"}]}]]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.869116456461858*^9, {3.869116494826236*^9, 3.869116508782467*^9}, 
   3.8691181123197107`*^9},ExpressionUUID->"c34a7f00-b88d-4a5a-b989-\
21da20369384"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.869116361205615*^9, 
  3.869116365171468*^9}},ExpressionUUID->"d09ee919-1340-4591-8656-\
14b6e9ee1d36"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Plot", " ", "E3", " ", "as", " ", "a", " ", "function", " ", "of", " ", 
    "E1", " ", "and", " ", "costh", " ", "for", " ", "s"}], " ", "=", " ", 
   "1"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869116669984223*^9, 3.869116692774084*^9}, {
  3.869116744761607*^9, 
  3.8691167763855133`*^9}},ExpressionUUID->"565f773d-214c-44da-b9d5-\
9a719b4a8bdc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"HeavisideThetaArguments", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "/.", 
    RowBox[{"s", "\[Rule]", "1"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"E1", ",", "0", ",", "0.5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"costh", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0.5"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.869116775007105*^9, 
  3.869116815616214*^9}},ExpressionUUID->"dde6c01d-75a3-435f-a76d-\
0b50c7dec494"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
8RMeXq94SHytwWz8Fpne7ZXeFGEddNn472z/Ze+8ugjnHx/2c7+Met1uYhvf
72LLuBIz84/N/8OPetIy/iXM+THv4p10yfz9U8s4lzIy4TBOFzHRR5NdP60w
dOw+9yTxo275C38aeT1n1NMFph2nET/qsVHXwV6cF8z6jm5WSl+J7yf4Mmeu
KO4F82zhtPkqacT320GddwB9fNn4O3/4IVLbSfyoDDb+4q+pC/wqS7A+39j4
q9ov2ZZ3jfh4aWw8JZmVy71ziY8nZuPJPZYY29bH69+ifxETtXHNH/5S63p0
MRPVb5vGFFei26GW8VDCvI6O/tLTgvgekS3jv5RZ6lATqjGS+EuilnFexhy/
VJmR1In4S8ot30cBY5W68ZV5A/HxZrR874TMrZk7pm//TXy8z//wlzTZ+PNv
K5kXvC3Dulmw8Z/Tl3s01Jf4Sy5s/IEa3U22u5ThvP2AjX91PVeNk1yG8/YL
Nv4Nt7+d67Wdj3XuwcYfeC6tximZ+Hiz2fiTZirHtvXxTFriSWN4qvfk2/pL
rXVLOnPWxq9uVQHRuXPL/TOZ08XbXm9KIzq35tts5se9/N/1XKJzZss4yWUG
JXSpTssjOo9sGc/5zIhPKvs2vCU+Xus4KWTk/vP+cmGAAOvc8A9/aSkbf7aP
rFpBj/hLcWz8ZbsG9NLvSPwldTb+DGF9xerOxF/ay8Z/fFQVd/xiAda5hI1/
a3j4k/cNxMebxMZ/eE/irN3DRFjnTDb+3I0nL7T18apa4vdilD5Y/uEv1bXw
YMbFZpdaQx8yT9zZEk8Es2fQslETJxLfo77l+geMo8Bqqfky4i+1Pm8cY/1s
yjCNU8Rfan2uRCZilYajWg7x8VrjZ5jxCxcGv+LQ/tLDJNpfmn2jNf6zZcWb
N28m/tLAG63xy4pmKCobEn8pkI1fLs5h2uylxF/qeqM1frctCTO+BxEfL4+N
P3WYkmuFLvGXzrHxi6K/fgiYQvwlIzb+jz92uLf18VrzJINUl4T+4S9tbL0P
KsyOz+9vRXQObf1ctL/7YcXQQKLzq1adUe2T740XXhKdzVqfC/GT18h5TyP+
Ul7re0QfN9ot7xJIfLzA1veO/AYYFPzXm/hL5f/wl1TY+E9ZLjdtb0f8JTM2
/oT+xx7sX0v8pXNs/AURxVo19sRfymPj3/s84vCMh8THG8DG76Zw12nuDOIv
BbLxywc/n6fQhfhLC9j4tdUWa7X18VJbxzkq6mP/h7/Uus8nH60Z7F+RH050
Tm39HqEhW4YPrlAk8/ENrd87VN1RYZ/6TuIvtWv9nqIXPV+HNTwnOge3fq/R
1G1jnz+wIv6SfmseQKG7Yw9qfCU6V/3DX3rExq8zgcOPWE/8pV5s/CZP4yVb
LYm/FMPGbz/TfVHONuIvWbLxX1vN+CwOJT7eF6Y1fgfRmH7rexB/6TIbf5Lz
68XpCURnXTb+/RP8+7X18aa05m10YN28P/wlpdY8jyZ3uHxl4Huic1nr7wIq
d/S80dOG6Bze+juCZJ7+86Z/IDofaP3dQTdffPneeIT4S0atv1PoztCEh/r9
iL+k0fq7hvzSrett0omPt+4f/tIENv5Z0aPeGk4j/lI7Nv4vPuldZkwg/lIh
G//xhq4NH+YQfymYjV/HKmAJx474S/Zs/IMb35jEPCU667PxG97meH40JP6S
Khu/T+6GKW19vLLWOgQZOfr+4S8xrXULsn+imKiqQ+aJN1vrLnRYcN5xaR7R
eWBrnYZqe98uN9tF/KXa1roIuZ++qKnfm/geTGsdhXb0K9QvyiA6e7TWXaj8
zsytim7Ex3v7D3+pmI0/t4fWB/nfROckNv4vqJ/6mHqicwgb/4Xfh9Y+lSO+
hwYbv6BiPn+6JvGXqtn45959m3hrHfGXEtj4Z0W4mjamEJ1Ps/HH39qyqa2P
591aJ6NOeh3+8JfY/TBI/MA8MsGB6GzdWv+jDY+C9jfnc9C5tW6pRKr/SRcH
VBGdJ7bW5+j57frHi24Snfu11vPokeK3WSttiL8k31r/o6Ae+5K2TSf+0s1/
+EsX2PjPrNeZ63yf+EsH2Pifdr9vHnyT+Evr2fh9T6Vdd7pNdDZi46+Y4Vt7
MpnorM3GP/hwY2BIJdFZg43/m+f9fhwO8T3k2Phr3a2i2vp4C1vng0jh4sE/
/CV23xeaWxyytm8c0XlQ63wTGZ5Udw44TXRuzTPV6JBqg3j7GuJ71LbOB9H9
m8/zo7SJ79Gaf16jMtUDB+8rEt+DaZ1voiM7tLtVvSA6W//DXzJl45+QMWRR
pSXxPSax8U/v1/PqOiPie/Rn4799K+PiFn3ieyiw8Qcx+7sVzSO+Rw0bv2lD
B0H4cuJ7FLPx39vo+0LTieicxMZ/UHNSRFsfr3Or/9D0fXy4yPEX0Rn20UWc
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
6UsAvBfrQ6ZQ6918dr37/wCuF9U3
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
RXAruBE8Fp7I+Xs0lpx/rsaL/pWZ9VBveBl8LNwQvhBuEewPHBLsA7Slf4b2
QNF6+CfkibQ28GX0d4Jbw9PhqdyrBL/7lHu1L/p9J9I/nv4j4XnIcbl94JM0
3kXb/B+Q19AuhZ/k/DXw1fDb8GPwrfCX8ClFr/05me3snrT+ZRM0X5fSf1Dw
OiylfRC8bsdkjoO0dy5D5sH2tBnyVH7bCZ6b2R5uhcsW7QfJ35AvJNslf2lK
ZlvaHJ4MfyB9BpdDVuZ4L1qkzeYez9J/Ze4x+S/5Bnvx27rwMcHzKL1SA9kx
857UuCue2yezTzwvjZvsaePgvddI/gmyYWZffGHy5apL5+eO73TNozLHVKVp
R2d+vjJpDWktyc8/ONgH+7lo/0r95ZA1guOm6kknHZw5Nq4c7PvUQw4MHnON
Z+fkG8luK15omtnXV1O8Jp/+utxjqetX4bcHwIP5W7XMv9E58kWlPytoP+e+
z67oeKx82vvSaXr3srljlAppHJqm6+i6evYjku8kXavzpG91rlgxXeuki9Vf
LbhvCMdNMt9LqrZxGudd6RqNEzdMrPtWzey/ah03z/wOFdLz1knXacL162XO
ZchGaEwOkZ8Y3bcjWp9Kr2p85QvrmtKVbTL/dle6ZpOkByunef2s4DHTfbU/
Neea+zfSODRIcy1fUj5lycQN0vgsyL2eq+X2f/fPvOZ0TrO0XjplXnu70/Vb
ZI7V903rVvfV87RMe6BK5thgR5rT5uncm3O/k3IAsrHHZY71FBNqrSh+j9E6
5ojofaP8Sr20Z7R3miO7ZrbL7dL8tEnjo3FqnXh5bnun+F4xip5HOYGu6Zl1
rZLpOmKt387pHTtkzu+0T31dUv//H+t59Luu6beHJJ3ZKNnWjqlf1+mUftsy
+FjPr+t1SP235J5zred6vHc5uB9/GxOs6+QrnpDupfctFR3L3ZrbrmvNLEWu
yL3utK4WJT9EPswxnFuT/pGZ9Zd0hezHYdG5pFXSh9E6uAKya/Az3J47ttG7
yn50p7+S7BH93YJj/9XyPYLjGtmfhsHPUBvZjuOm8ITMOTjpJdmGKtHx1Rrp
w2h7Wy3aPip2k2/fM/iZ78y9BiumdduX/gbIu+gfGmx35BvXio4D18NnB99X
fnV3+k6QHtacp/yhchUdgvMPt3HO6cG2bx3cL9hu3g33D7ansoHzMtsI+WbD
tG4L9tVHBNtf+eHDg22i/OHzg+8rP1kx2Wnw4sy5RelR+Wb1onOXitcapHfU
PtXeqpT2r/RZtaTTZgf7SPJ1FwT7MP+LKYJtuvzeucH+jPzeacH2Xf78FcH+
pHzmqcF+kWKEWXD/gmONd4NzSttzx4jr4J+493Ce84GiY8ZtwX6v/PN3FBvB
n8HvBeegdsDTg/0xxRRTgv0xxRqTg8dBMch4+KSCY5Yu0TlQxZ6KQafpt9z3
hmBfSPHm0mAfSfHm4mDfSTHa/fCEgmOK+4L9LsUI1wf7TopJW0bnLhULjwv2
4RXXXBLskys++hS+Hd4JTwz2t5/IHVsP0l7geSYE++qPyxZH53kVd38SnAPc
BX8WnBv8HP4iOIf5tZ6Tc2+EP+U698E3aAzhe1Ps8DF8eXCO+ij5C0XrBNnb
dfD18Pucc6f8JPgdeK1sNvwufBd8Hfwe/Ci8Ev4C3gDfoueBL+W69aW/kRvp
vw3+iv6n4Tvh7zPP83LNKfwMvBb+AV4e7N8qD/ACvKDg+E55CK2B7Zlj342w
HIox0Xk3xcKfB6+lr+CvgnO238JfBud1v4G3B+dXv4BfD/bVFQ8qf6B7vaHn
of/KguO1F4N9b8WGm4J9csVhA6Lzd8qNbAheS4r7tsKLC45Pnw725xUD9o7O
6ylHcU3yjzW/1wbPu+L3H+AH4e/gE4NzQcoDdArO4SgP0CU4X6ScScekD6Vn
BmS2QcrPdw7ORylXcFZm/0558r1z540D998rdx44U/wanRNUfmN3cN3hN/j3
4Lz6r/BvwWP+S+5cyBa4JLJE7vxzUbF75py3cnfHBdcIlCdpHVwjUJ6kdNI5
IdntKslWKv8h/0Yxo/yRqskn+bZof0352jLJF4nJ/ldOPsno4JhUeYMLgvWn
chdnZ477lD9sE1zjUH4m5s6TK+HXNrjGobzQ8cG1D+VtFMv8kdaw8svKMyuP
9HNwfeEn+PvgvPf38I/B+e0fpJOTX6PcYB9aK7AW/aMzxwjK+/UIzitWoX9S
cL2jMXxacI6xKnxGcEwku3BmcB3qSM1pcB2qdu44RL6x8oCTMvtXqsFcTOsH
N8qdg5VvrbzcOcH1ozq5azSK35UrO1e+Dv114dvgEQXnTEYF15jqwxcF12ga
wiH3GvhP+i06J66cxp/BNazdGr/g+s7v8E/BdYEf4Tx33WFP7lzI+3BFZJa7
XvAPUkld1SD+Ro4Nrvs0gE8NzutWhkcG187qwackGyrf4L/gesefufPUylf/
Ae8JrnH8pX0XHZ9L986gfzj9R8MPRdeEZGuapvxPU7hJypU1gZulXFAzeH5w
PesYPVt0Xr47fEzKC6n/qOjalfRt85Q7ag63SPm6FnC/6Hx9b7hVyqm2hI9L
+b1j4b7Refleet/oekA3+MbgmkJr+OToGsNJ8E3B9YI2WlfRNYZTpFui63Ad
4V7RNYYe8OnR9YOecJ/ousJpWhvR9mMg3D+6ntEH7hEdS58Mt43O2eperaPz
tK3gNinPeZz2V3QuV8+5Irh+cTy8Er4EbgevDa5lnAhfFh3/y186I7qmcjo8
ONomnaU1El3Hkl5SDK68ivIrit8Vs1cIjoXl35eXzxVdc9VeWxKcn9dzTo32
I+UrLgrO4WvM1wXXQbokWymdUFZrnLao4OdZH1zf0Zhfmvxg+bozov1C+YrX
BdcxNadrgus7nXLnBxSbH46cGVwj1hobGJ2bOAMeFG2Pz9T+jbbTA+DLU15G
PuSQaNt8tvZQdC1QertD0bGWag5nRtd4+ko3Rtd++sseBdeFtQ7vCq4fdYYX
BtdttVbnBNeUtRfmBdeUtf7Piq4P9cvt20u/KYfXM7rGcCrcPbr+0RXuGl3T
1fy+GewPaF3Vjq6XS/8cGV1Tl446KbqmoufpFl1T0Vy8FewzDIKPjq4fa/9u
CfZDNG7To3NG8uFfDfZDND6q6yjfciPyNfpXFTye38Gb4JFw5ei6jvTwzuDa
3zC4TnTtXzrn7+Aczvlw9eg6jfT8ruD62nD41+Ba4Si4YnQ9RrqrRnSNSvr8
5WA/SvNbM7rmJN3+bXB97Ty4bvS3CNLDDaO/A5BubxBd+5dOrh/9bYH05D/B
9dDRcNXodaC4e3S0v6Vnaxddc9Ee7BD9jUJ7eHx0bU+/XRWcK1P/uOg6n973
w+Ca6TmyC9H1Ub3jlOicoOK1j4Lrp+fCHwTXVYfA01LOTjHX0Gg/VfM4MbrW
q1ipc/R3A9ojk6Lr2YoTJ0fnEBUb3hFcw+oArw6uk0qn3R5cSz0BPi/aT9Vz
jo2u6Wp+Vcc8kPNeQX4TXLscQf+F0fVgjfkF0fVg9b8SnBuUzhkZnSvUe3WM
/t5C93o7uP47GB4R7RPrfT+m/wH6h8Kjon1i8bBof13nnx/tH2uNdYr+bkPv
pRyF8oeqyy0LriFKlz4Z7KtLDz8fXWuXT/Jq9LcOsneqcSmPpZybalCqq6q+
qvy8ckjKiT4bXfuX3/JcdO1fNvqx6Fq+4otN0d8QyM9RrqNV5lrVhOg8gvID
qrkrJ6L808vR3yjIB1D9Xrkr5fceCq4jywYpfleeR7lG5d8apf2oOr78O9UK
X4uuDciOK4e/o+B6u2po2wuuDz8a/W2BYqJHguvpsmUbor9LUJy1Mfq7EPn8
b0bXCeS3vBVdh5AfMijFv7W4xtvRdQX5h+9E1y3kJ78bXYeQr7stun4gX+Xh
6G9HFM++F12fkI8t37V6uqbyb8pXKHeiHKDyZcp9PhP9LYV8/iejv/tRHPd6
dE1CvsrT0d8GKZZ5Kvq7GcUyT0R/+6J4R3lO5Rj1fcrW6LqFfKdHor9fUbys
mojyZ8qvb4n+dkS+WaXo2rN8UeWZ5ZtrbzweHPfJ37g7+FsC6fDHgnPm8g2e
C44xZVOeDY4xFR+pNqvvc/SdzkvR350opngw+BsD+Qyq1ykHrW+Lng+OW2VH
lKuRH6t84ebgOFF26uHgbxVkUzYGx6fyVe6FZxXsd+m7Ea2lpsh7gr/BkI+k
WoPyYMqNKQ+vZOkR8BPB8az8rv8DwqqPeg==
           "]], 
          Polygon3DBox[CompressedData["
1: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
           "]], 
          Polygon3DBox[CompressedData["
1:eJwt2Hf8lWMbAPBf53dOw94fGS/ZL1mvkmhKSCraQ0WUSotUor2jQSnR1E57
l4qKlvYe2lJGNhmh93t9nt8fl+7re1/POc/vGfd9HQUatKzcIpWVlbVPZMTH
6ayspmBirqysCeJueDurxXrJy6hpnp2VNZNVZH1Yb3GzuuXsBTZJ3kBdR3W1
2Ti2hfVnq9nTbDrbx4ayzawOG8+2sgFsDavFxrLNrB9bxWaxSqwve4jVZ0+x
KWwXG8TWs0nsAfYSu4NVZMtYIzaW1WPt2d2sMRvCKrMObDaryt5kj7PG7GJ2
J/tNnGQvy68W98tPh7NX5P8TreQjHVuLdXfsXFadDWIVWRM2hT3I2rNXRAHX
7x72Ihslr62uh7ou7F7j11heeVd5N1EkzpXlY93lk0Uxx7Zmd5qrwOuzaWwv
G8I2sansoVTyefG5HeQfiefZOFafvaquHpvK9rC32UZWl33AdrPBbAN7WwwW
G8y9aq64v+Mh4+7Gs9Q1VzfRfCO2hH3FxrMD7ANWhr3KCrOqrCzrwWazFmwS
a8g+ZCfYOLaf7WbD2A42kC1m74l3xWZzHc2Vci5PGr9tvEJdJ3ULzZ/NbmQ/
i3j2H2BV2LuS1eq6sSVsB3uTbWB92FxWnY1g61hP9hGrwUayz1iveIdYVfYe
W8O6s6WsMhvCVrLObBGrxoaztawHW8Z2sXfYdrZNVPd33M/aszGZ5HrHde8n
3hBrzbUxV8TcAHl/sY61ZfexUfKRYivrzB5kr8v7ijXsZXYv6yPvLVaxl1gh
9k9cB+f1ufw84zzsIvN3yH8V35prLd8musqXOd/2bLzaXqKnWG2utbnCjt1p
/JbxRnV91c0xfxUryi4xzhfvuvx6UZZdzs6Neyx/Qgxmy+UdHbvA3HbWh33K
PhGP+Y5n2Vx2WD5S3S51b4qB4jNz7cwVVdfAeI7xIXUj1O00v4I1Y5PZs6wT
e4bNZgfZcLaDTWOPsK6sOKvFprNHWTdWgtVkM1g51p2VZLXZY+wNtoi9zKaz
x1l/9iFry2ayCmwAW8LasVnsgXgWxPqc56GY8SPGvYznqmulboq6oWKI2Gju
NXMl1FUyHmT8sboO6uabHyGGiy3mOpkrre4548XGx9WNjXtv/mHWk81hLdlk
VpONYutjD2DLWUU2kC2NdY3NZuVZP7aYtWEzWDn2OlvIWrNp7FHWly1gL7Gp
bJh4R2wy18FcSef3rfEa42zxkbqvzH/CYiP7wLENWRf2M9vOzo9nV7Rx7E9s
i/E58c6p+1ndL2yH/IL4W9hv7Ee2WX52vMPsJ/Yr2ym/MNYEdor9wDbJz4q1
g/3IxrBSzqOQ8a0ir+/NF+u78Xfqjqkbmk722ibyoWrfiXVWzXxWO5XsqbG3
vs6as63sX/kSx/7qc76MdZv9xRawQ+wYW8b+ZPPZ4bi/7FL5tcYF417LvxMb
1OWN90bdD/x7tlGeT6xi32cn71y8e/mNs0Vu53KELYi1k09Xt5sfZQvZL2wG
28MOsBnsGzaRbWUTYi9jtWJ/E6/5vMNsPvtJ/qNowvayMWy/fJhjVzh2DxvN
Po9rxVayUbHf+vcmcQUbKf9cTFL3hbpRbK25/bE/xnVno9k6to9NZEfZEfG0
7/2CLYp1TT5T3V51zdh69gebx75jB9nMWPvYJLaFvcA+Y7+zuewka8JWsh/Y
NPZlnGv0JcadWR5553SyhvVWNy/um5jsXL5in6SSaxLXZhm7MfqNWJPkGcd2
kl8jbmcvsjOxl6aT536b8RkWG9waxxZkNY17sgdxs5xrMCGV7DGx18xUN44V
TCX3J+7TBTlrzSuppB+MvjD2oH/YkZz3Kt6v7Wwiu8+4uZqbfEf5nL1saCpZ
m2ONnppzz+elkuse139+7EfsfPWXxfk49o100k9FX/V3XEORVteUrTM+5bg5
5r51zDdsdezlsf+wE+wEWy7/W90idpQdj3eOnWYL2RF2kq2Nz451kX3NWrC9
8tyxV7PTOf1aafkLjm0W+7dzacn2sTzx98V5qmvPThn/E8+0yGSSXrlCKunz
ot/rkUnehSKp5LPiM/Pn3PNPU8k9i3vXin3NVslzxZpq6rjvaMxWyL+P68mO
sUNsFjsZzw/bxn5ju9hFsd+y39kptlt+sdjE/mDns//Kqzg2NyvFzmO3sCdz
Jb8LSrKSOXvEhEzST0RfUSKd9FrjM8k+EvtJ8Zy1elwm6ceiLyuc0wMMzyR9
R/Qf57KbWSXfYZhVgl0YzzOrE70tK8POYTexCkyaVdx/LmC3smrxHrHSrFRO
fzPRd4yOdVhcHmsEe0LdxeoeYaVZFzY91hv2PlvI6rJ3WVXWki1m9eOcoweL
d4wVyumN3sskvU30OB+yZ9lodXXUtWN3sKdZf1YueiS2hD3HxrCnWFu2kjVn
U9hzsS6wpawhe5/Vjd8V7C7WgA1k5Vkbdid7hg2Ivid+k7B5rAYbzCqxpqwM
68ZmxrPLJrBFrF78Hawaa8UWsKfYMFaFtWBzWDX2FqvAns9O9qg6qWTPir2r
oGuRHc8vu0EcUpdXTYqdkF8vDrI8LBc7Lr9OHGC52Z/igDy/2Mn+9R1F00mf
Nlr9W/JB4r500tOOyiS9XPR0t7LKqWQ9jXW1YdwTdk52sk7Getlbfpuooq4L
K8YamX+eLWVfswnsILuSFWbV2WXsMXYtK8Eas+vZk9nJOnkbq8FqxnvtnH5n
e9glYrO6P9UVYCXlTdTcwCqzm9nDqWTNjrW7BrsuegbWlN3IqrAe7Cz/dmRF
Wc9YH0RLdVNZI9bVfJF00v+PzCS9f/wGuIWVZ23V3aOuLjvNDrErxW4WL12s
40fl/xFXxxrlM/Kze4wrO/YSZY869g+2n12eSn4PxO+Cv9hB+RViFzsTL6fj
v5QXiP07UjXF0kkPOjaT9HLR051hx9i1safHqcQaJB6Xt4veidWLfjed/K58
P5P0s9HXXsEKsarqLlVXjv3NDrOrxB6WS/6v+EJ+TSr5/xvZ0X+kk987IzLJ
b6f4DTWe3cUa+rxr1JVl/weePU4k
           "]]},
         Annotation[#, "Charting`Private`Tag$166196#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jtIlWEYB/D36PGWqXmB7JT3JkGHEkE5jU5mkSLeEPEoYg01iYprcAxX
0VlR90j3sHbRzLtHHRsichMc/H04/L/f/zlneJ/346tLfer+GAshLEiLEvVG
jz9MZofwiB2s4Rs2c4CvOMnXnOYQ05yXD/oaZ/kt+o3bXOYuN3jJLf7jT36J
hxB3bpv8Mr9guTzOCmHfXMnffMIDJnjIpzziMx6zitVyotfwlLU8Yx3PWc8M
G3jB57xkqV1yndkuV+aXrJAHdtsz3/r/B/9ykxmuc4dL/M40v3KGq1yR9/pn
DnKKnZxgkn1s4pwzblgti3rCudd6K0vYxP/R/TguxdG7kzG9KLoLU/IwuidH
pVAfifbnMAs4xHz2s0/y9F7msoc5fEcrhLe0XuiiVxTKDHmx++/kDhP0OuE=

       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{828, 1137, 1290, 1035, 827, 1291, 1036, 829, 1292, 1037, 830,
        1293, 1038, 831, 1294, 1039, 832, 1295, 1040, 833, 1296, 1187, 1401, 
       834, 1297, 1041, 835, 1138, 1298, 1042, 1139, 1136, 1299, 1043, 1140, 
       1181, 1182, 1300, 1173, 1044, 1141, 1183, 1508, 1289, 1174, 1176, 1045,
        1184, 1288, 1507, 1177, 1175, 1178, 1046, 1185, 1509, 1179, 1180, 
       1170, 1171, 1047, 1172}], 
      Line3DBox[{837, 1188, 1402, 836, 561, 838, 1301, 1048, 839, 1302, 1049, 
       840, 1303, 1050, 841, 1304, 1051, 842, 1305, 1189, 1403, 843, 1190, 
       1404, 844, 1142, 1306, 1052, 1164, 1143, 1307, 1053, 1144, 1284, 1308, 
       1054, 1145, 1285, 1309, 1186, 324, 326, 826, 325, 330, 329, 1165, 1502,
        1146, 1055, 1147}], 
      Line3DBox[{846, 1191, 1405, 845, 1192, 1406, 847, 573, 848, 1310, 1056, 
       849, 1311, 1057, 850, 1312, 1058, 851, 1313, 1193, 1407, 852, 1194, 
       1408, 853, 1148, 1195, 1498, 1166, 1149, 1314, 1059, 1167, 1286, 1315, 
       1060, 1168, 1503, 1150, 1061, 1169, 1504, 1151, 1062, 854, 1316, 1063, 
       855}], Line3DBox[{857, 1196, 1409, 856, 1197, 1410, 858, 1198, 1411, 
       859, 586, 860, 1317, 1064, 861, 1318, 1065, 862, 1319, 1199, 1412, 863,
        1200, 1413, 864, 1152, 1153, 1505, 865, 1154, 1155, 1506, 866, 1499, 
       1156, 1157, 867, 1500, 1158, 1159, 868, 1320, 1066, 869, 1321, 1067, 
       870}], Line3DBox[{872, 1201, 1414, 871, 1202, 1415, 873, 1203, 1416, 
       874, 1204, 1417, 875, 1322, 1068, 876, 1323, 1069, 877, 1324, 1205, 
       1418, 878, 1206, 1419, 879, 1207, 1420, 880, 1208, 1421, 881, 1209, 
       1422, 882, 1325, 1070, 883, 1326, 1071, 884, 1327, 1072, 885}], 
      Line3DBox[{887, 1210, 1423, 886, 1211, 1424, 888, 1212, 1425, 889, 1213,
        1426, 890, 1214, 1427, 891, 1328, 1073, 892, 1329, 1215, 1428, 893, 
       1216, 1429, 894, 1217, 1430, 895, 1218, 1431, 896, 1219, 1432, 897, 
       1220, 1433, 898, 1330, 1074, 899, 1331, 1075, 900}], 
      Line3DBox[{904, 1332, 1076, 902, 1333, 1077, 906, 1334, 1078, 908, 1335,
        1079, 910, 1336, 1080, 912, 1337, 1081, 914, 1339, 1340, 1082, 916, 
       1341, 1083, 918, 1342, 1084, 920, 1343, 1085, 922, 1344, 1086, 924, 
       1345, 1087, 926, 1346, 1088, 928, 1348, 1090, 930}], 
      Line3DBox[{929, 1089, 1347, 927, 1446, 1233, 925, 1445, 1232, 923, 1444,
        1231, 921, 1443, 1230, 919, 1442, 1229, 917, 1441, 1228, 915, 1440, 
       1227, 1338, 913, 1439, 1226, 911, 1438, 1225, 909, 1437, 1224, 907, 
       1436, 1223, 905, 1435, 1222, 901, 1434, 1221, 903}], 
      Line3DBox[{932, 1234, 1447, 931, 1349, 1091, 933, 1350, 1092, 934, 1351,
        1093, 935, 1352, 1094, 936, 1353, 1095, 937, 1354, 1235, 1448, 938, 
       1355, 1096, 939, 1356, 1097, 940, 1357, 1098, 941, 1358, 1099, 942, 
       1359, 1100, 943, 1360, 1101, 944, 1361, 1102, 945}], 
      Line3DBox[{947, 1236, 1449, 946, 1237, 1450, 948, 1362, 1103, 949, 1363,
        1104, 950, 1364, 1105, 951, 1365, 1106, 952, 1366, 1238, 1451, 953, 
       1239, 1452, 954, 1367, 1107, 955, 1368, 1108, 956, 1369, 1109, 957, 
       1370, 1110, 958, 1371, 1111, 959, 1372, 1112, 960}], 
      Line3DBox[{962, 1240, 1453, 961, 1241, 1454, 963, 673, 964, 1373, 1113, 
       965, 1374, 1114, 966, 1375, 1115, 967, 1376, 1242, 1455, 968, 1243, 
       1456, 969, 1244, 1457, 970, 1377, 1116, 971, 1378, 1117, 972, 1379, 
       1118, 973, 1380, 1119, 974, 1381, 1120, 975}], 
      Line3DBox[{977, 1245, 1458, 976, 1246, 1459, 978, 1247, 1460, 979, 1382,
        1121, 980, 1383, 1122, 981, 1384, 1123, 982, 1385, 1248, 1461, 983, 
       1249, 1462, 984, 1250, 1463, 985, 1251, 1464, 986, 1386, 1124, 987, 
       1387, 1125, 988, 1388, 1126, 989, 1389, 1127, 990}], 
      Line3DBox[{992, 1252, 1465, 991, 1253, 1466, 993, 1254, 1467, 994, 1255,
        1468, 995, 1390, 1128, 996, 1391, 1129, 997, 1392, 1256, 1469, 998, 
       1257, 1470, 999, 1258, 1471, 1000, 1259, 1472, 1001, 1260, 1473, 1002, 
       1393, 1130, 1003, 1394, 1131, 1004, 1395, 1132, 1005}], 
      Line3DBox[{1007, 1261, 1474, 1006, 1262, 1475, 1008, 1263, 1476, 1009, 
       1264, 1477, 1010, 1265, 1478, 1011, 1396, 1133, 1012, 1397, 1266, 1479,
        1013, 1267, 1480, 1014, 1268, 1481, 1015, 1269, 1482, 1016, 1270, 
       1483, 1017, 1271, 1484, 1018, 1398, 1134, 1019, 1399, 1135, 1020}], 
      Line3DBox[{1034, 1163, 1162, 1501, 1033, 1497, 1283, 1032, 1496, 1282, 
       1031, 1495, 1281, 1030, 1494, 1280, 1029, 1493, 1279, 1028, 1492, 1278,
        1027, 1491, 1277, 1400, 1026, 1490, 1276, 1025, 1489, 1275, 1024, 
       1488, 1274, 1023, 1487, 1273, 1022, 1486, 1272, 1021, 1287, 1485, 1160,
        1161}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{333, 550, 1291, 334, 561, 358, 1406, 572, 371, 1410, 584, 
       386, 1415, 597, 401, 1424, 612, 416, 1435, 627, 1333, 431, 642, 1349, 
       446, 1450, 657, 461, 1454, 672, 476, 1459, 687, 491, 1466, 702, 506, 
       1475, 717, 521, 1486, 732, 536}], 
      Line3DBox[{335, 551, 1292, 336, 562, 1301, 359, 573, 372, 1411, 585, 
       387, 1416, 598, 402, 1425, 613, 417, 1436, 628, 1334, 432, 643, 1350, 
       447, 658, 1362, 462, 673, 477, 1460, 688, 492, 1467, 703, 507, 1476, 
       718, 522, 1487, 733, 537}], 
      Line3DBox[{337, 552, 1293, 338, 563, 1302, 360, 574, 1310, 373, 586, 
       388, 1417, 599, 403, 1426, 614, 418, 1437, 629, 1335, 433, 644, 1351, 
       448, 659, 1363, 463, 674, 1373, 478, 689, 1382, 493, 1468, 704, 508, 
       1477, 719, 523, 1488, 734, 538}], 
      Line3DBox[{339, 553, 1294, 340, 564, 1303, 361, 575, 1311, 374, 587, 
       1317, 389, 600, 1322, 404, 1427, 615, 419, 1438, 630, 1336, 434, 645, 
       1352, 449, 660, 1364, 464, 675, 1374, 479, 690, 1383, 494, 705, 1390, 
       509, 1478, 720, 524, 1489, 735, 539}], 
      Line3DBox[{341, 554, 1295, 342, 565, 1304, 362, 576, 1312, 375, 588, 
       1318, 390, 601, 1323, 405, 616, 1328, 420, 1439, 631, 1337, 435, 646, 
       1353, 450, 661, 1365, 465, 676, 1375, 480, 691, 1384, 495, 706, 1391, 
       510, 721, 1396, 525, 1490, 736, 540}], 
      Line3DBox[{343, 555, 1296, 345, 566, 1305, 363, 577, 1313, 376, 589, 
       1319, 391, 602, 1324, 406, 617, 1329, 421, 632, 1338, 1339, 436, 647, 
       1354, 451, 662, 1366, 466, 677, 1376, 481, 692, 1385, 496, 707, 1392, 
       511, 722, 1397, 526, 737, 1400, 541}], 
      Line3DBox[{347, 557, 1297, 348, 1404, 568, 365, 1408, 579, 378, 1413, 
       591, 393, 1419, 604, 408, 1429, 619, 423, 1441, 634, 1341, 438, 649, 
       1355, 453, 1452, 664, 468, 1456, 679, 483, 1462, 694, 498, 1470, 709, 
       513, 1480, 724, 528, 1492, 739, 543}], 
      Line3DBox[{349, 755, 756, 558, 1298, 350, 761, 788, 569, 1306, 366, 768,
        791, 1498, 580, 379, 776, 1505, 796, 592, 394, 1420, 605, 409, 1430, 
       620, 424, 1442, 635, 1342, 439, 650, 1356, 454, 665, 1367, 469, 1457, 
       680, 484, 1463, 695, 499, 1471, 710, 514, 1481, 725, 529, 1493, 740, 
       544}], Line3DBox[{351, 745, 757, 559, 1299, 352, 762, 763, 570, 1307, 
       367, 769, 792, 581, 1314, 380, 777, 1506, 797, 593, 395, 1421, 606, 
       410, 1431, 621, 425, 1443, 636, 1343, 440, 651, 1357, 455, 666, 1368, 
       470, 681, 1377, 485, 1464, 696, 500, 1472, 711, 515, 1482, 726, 530, 
       1494, 741, 545}], 
      Line3DBox[{353, 746, 758, 747, 1300, 818, 806, 750, 764, 751, 1308, 368,
        770, 793, 771, 1315, 381, 778, 1499, 798, 779, 396, 1422, 607, 411, 
       1432, 622, 426, 1444, 637, 1344, 441, 652, 1358, 456, 667, 1369, 471, 
       682, 1378, 486, 697, 1386, 501, 1473, 712, 516, 1483, 727, 531, 1495, 
       742, 546}], 
      Line3DBox[{354, 807, 748, 759, 749, 819, 1508, 808, 752, 765, 753, 1309,
        822, 772, 794, 1503, 773, 382, 780, 1500, 799, 781, 397, 608, 1325, 
       412, 1433, 623, 427, 1445, 638, 1345, 442, 653, 1359, 457, 668, 1370, 
       472, 683, 1379, 487, 698, 1387, 502, 713, 1393, 517, 1484, 728, 532, 
       1496, 743, 547}], 
      Line3DBox[{355, 801, 814, 802, 760, 811, 820, 810, 1507, 809, 815, 817, 
       816, 789, 825, 826, 824, 823, 774, 795, 1504, 775, 383, 594, 1320, 398,
        609, 1326, 413, 624, 1330, 428, 1446, 639, 1346, 443, 654, 1360, 458, 
       669, 1371, 473, 684, 1380, 488, 699, 1388, 503, 714, 1394, 518, 729, 
       1398, 533, 1497, 744, 548}], 
      Line3DBox[{356, 803, 805, 804, 787, 813, 821, 1509, 812, 800, 766, 790, 
       1502, 767, 369, 582, 1316, 384, 595, 1321, 399, 610, 1327, 414, 625, 
       1331, 429, 640, 1347, 1348, 444, 655, 1361, 459, 670, 1372, 474, 685, 
       1381, 489, 700, 1389, 504, 715, 1395, 519, 730, 1399, 534, 783, 1501, 
       784, 785}], 
      Line3DBox[{535, 731, 782, 1485, 520, 716, 1474, 505, 701, 1465, 490, 
       686, 1458, 475, 671, 1453, 460, 656, 1449, 445, 641, 1447, 430, 1332, 
       626, 1434, 415, 611, 1423, 400, 596, 1414, 385, 583, 1409, 370, 571, 
       1405, 357, 560, 1402, 332, 1290, 549, 754, 786}], 
      Line3DBox[{542, 738, 1491, 527, 723, 1479, 512, 708, 1469, 497, 693, 
       1461, 482, 678, 1455, 467, 663, 1451, 452, 648, 1448, 437, 1340, 633, 
       1440, 422, 618, 1428, 407, 603, 1418, 392, 590, 1412, 377, 578, 1407, 
       364, 567, 1403, 346, 556, 1401, 344}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
o0rqcrL7Ta0Pgb2hdBrOJ8HFcAbLYxNXSf9KAj4dX2/J5x8PRuGvKWa7XPDJ
WcPSMwQBeWGJty9GR0GwyGQo3VQAhvDPmw9MEeA8Yla0FBwG8QvcJmYC4XgS
VHYuUvXnAkqZmd4HAm+D8svnfNHI7BQlJEDVH2uUS7sc6QFR0yUNU31x+Pv1
k81s1PmjtbTPq5+1gwdMTy++CU3AE4xB4RwUArzkt377qKcCwT6vR7j4ElFI
8WjUZzIBz/fLkZ3n3uGVMPVLN1cTUEPIQMCVqve7kmtk89Ed3fYKPn3InYC1
bQ+37KLOwzSw6dXJ0gA05z79VOZHDJLnjhRPU/WXeLUfvPUJw0K+fdXn90Wg
w/2UuC9Ue+rGPvaJP4zGxZKcOmcMwuCgybU3qPqhG0KNx8MTkCZ0t3HTMzdM
PvUq+Sj1u1zstwvvBVPvzwtZzhGyKolRUruye4Qal1b//L0QG/5HXiX9K6n2
8Gl2aq4aiJmw31U4tuCMHUFhuT0r1LjqJsXfv/RITLNewJtZOQCVyriZjywR
8EXVWO/VorbYFuUzAcfswpDns11s7jwBRi1uZbdmb4uNx3EdjNwWhf9iAiIa
UkxGZlXFVn/PXBxRicXeQt8Z+x/UuNq9703C1FWx83SWvnUy8fgvJmBiZHSW
aUqA1DfTunXjVDz+i6n3NNxXy+bnZdJ/x8vP2f2ZnxSlGvLuz/y60nf/mZ+n
3vSPPaSBygWpP/b8i6nvda/Cy3WL90ksf+3f89d+hckdVaFLT0hfatdwslDX
W2y+tPnPejvMb3TrruqThG+oO/zxz539fv/458c//jMkTf8jb5BG//ozaIPX
VSGhPrhwMnac9kEzpgWu7L35aRT8afZuCLJtB4OzvZskdbvRUqDi45uWUbCo
+cnxvjYXjDaqj4XZDuJ683ivnOOjkPV5wxlDjm7UPFhwp2luCEtYnwg55vaB
hv7BucmjLsAQkcW2RrwNy4+cGl2rSwazL4pv319vxwRNQza93HbM7ExPHJwY
gzuPg/bLHRsGhs0UeoNL5rhZ9XKYGcsION3y/H7r9DCss2Sbm9twmfSvHAE/
0i0hI/4BoGe3viJQWYtR33+pnj41Cmc86wO23OwHC40NHz5qNOBeBl5Vbq1R
qD/AyHddqAd6PjxklWRsxzZSskVH+ihoj1u5juk1AKzh7R3N78NLUrU2hqWj
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
pdZiIOPYo8cXqPA2kL1LU6MbJd/q0g6drkEXqdCV3Juo4Jr82uiN5DAGRwqe
c9epxIlZ94ll+n2w5UaDzYvbw3jG2MFC6mUxPjl/4GtgRR8o2OhLF5rkwGe9
30s7J0sx0cH9wetpBpS5LPGKDInA4rmko2aKFfh+iydUcTO/L9LXsIf0NfSR
voZYMs5LxnvJeHOugg9LVjfOle6t6FMtw+aXzFX9HhUWvwhw39Pfjeq8Ki4L
npYg5bTf6Cc9KoStWP5u01QEfFe2zuLk/oQK3X2UHuY8o+Mg/EZMLQrt7ZSa
bo854LdFmKrFnAfYLCVdb9iZ4c4Pg2vrD37CrR7Pl1Yx5z3B4DgD6z9PKEry
p0L/6bevsND7v/325LKPr4/4DcIuLlVGqvgH1Pjy0Pufv3k2rZeri6DiQ9wv
xh/XgZcPbmQxEK2DAVO/UsOzLdBEy3J4RqvG81fDDn7YOQoqpJ62ltTTHif1
tEFRGpXBg3SMW2dk699ZgCl7w7nnFtSDbOjtu4zHFZC2+8zkwrEKbHyg65XL
rIt3dYs0dKyMgKc+rQ9dHtYgzeduhTmFAXvm+Vb+8z6cal6BX7m78S6dJf73
zxqU3bc6OW8nFS6xEiwcj4dRwYH3SV1nKYZS0/2dbfpgn5Hx5rdzGfBiw8dR
3rYSfN4sfHZagABN6Zp9UamxaGNpu7zIqBxnICwyaRsBUeRz3D7vOWq+5kxw
au/GMx+jC2LPleKyu+llh7WYz2trdG2VAx0rGqx9fo1V4RrOsewF9rVQxvWv
32GQ9DtMkH4Hw1X/xjvI+BLZf+N5ISvX2U1UoM9ddcU8PTpyxZ8JVhOtBzNe
lhZu9yGkna0rbj7dh9s2UcTl3epAbsipWWegF6GB5dy6xCFkPyCzy+xtPTSR
/gKTef4CFvHhp9/yOiFI/pFFdl8fBtV89Vlb1gdPWkOPGbvmo53qhq87O7tx
rZP5p7AEKhQb5jWJCfXjpYJUxtCVTlRsKM07GdX3Xz3/PVLPz0vq+ZXJuBkZ
5yfj39a+fD15g46vdlq/PvyrBoeU4dMFtlqgt5ZbpCfTMPX41h6JjhZccMRG
6URjLXiv/nd8esjxmSPHjUbq53VJ/bwmqZ+fIuPnyLg6GR8n48pkXIOMs2z8
d3zekuMTTY5PTs63hTX3k/CasMTzXdiDt34r7gdTKjwk7+speV9byftSjOEw
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
svZ1hXaKEuBDFdqQkxMD+z1YZ08uzkPvkZJX3C4ECLe8vZ3wJxEXZEi8DFDO
xzNC72+NGhNw9MaTj7dlq5HyqB9cJfPR4zp9ybQlA6gm8i/NDNrx9JmWl34L
crHjuNRTkB0Frasr4g7s7AJ8dU2U3VUDeY957p4Yp8EJz71bD5p2wB8dp0Hn
J454Le4qV60Wc/3dcidA7F0byH8146nJ8ccsvpHnh7uY9eyutc+f8LYAVZ6/
6qF7OKY9uhvwVZMOR7Ymuo8fbYQvvWxPp2rjEGbTO8/T6WBZ+lv4UWQt9Fvz
KnqqJuM3/n1F5UYMsCJ9fGnzfHzP3j8QjhvMgdBmodNHKBTs5V3L5f2cAOXJ
6g26fwJgTo4CMJ6NB9bp0nfHE1C3fs3g7OFk9H2esGqyLAcTC6t84TMB/Eo/
bRTsK7BPZqUG43UOGnUI27nWMaBvb1/p1oFmJEJW1hsIIGpmmzEox+jwu5R3
Y6Z5D5aPFpY0mKVg7muTZ34+VPAgfXlP5/nybu2zVNj2Jhkm4i06dvmm4XZl
o3AWZr3jJOq9Om1NA6xZ1MFpZmONt0NNiXdHGNBN+ssk5vnL4tVzbvkvi4d4
z3Q7Y+b/VVy4vHOimADzQB+jS9dNYblbYo8cNRU7RvP29zYT8NYwkGvmdw2U
+O9JNH/+Hr/ZZcwsTGJAhYVU8w7eaqi1ztId3efJXGRLvs1MMMCuu79/oV8k
3Ctve3MiLgnt7KVtohqY40PtUM/w0wdhGL9WW5qMxy6m/1Dt+sf/ckY5Jy4M
16obyouMJaN0uSjE1BOgt1Eq0cS6AtzPO7PqiJmhwbeLw578zPUarb7/OFoK
XAnJU0rs7nhiud+3cjkC3Lpv3gkJKgTXnwdm/6wIRF7u9RkahgTE6wjZBvEF
w9InLVdO8CUiobv/zgQzT96sIjfwzuoReEsWCuv9TsTgiK/+1/sJMPh1TeNW
4Fcc0U7JPjqXiOW5mzXVmcdnu13jFZdOwuK3CgoxfxKwMMSYal9KQG7HW9aT
WYXw0EO3wa72FUqe93eyMmG+V3cVGbYs+eBW+cZP/LsrxoYTmbvcCdi92iPG
ensOSG0U3O3QGoAPrTru+jHrnTPJPeu0jmXC+tnI7tnTYThdaCCzLJ+AXiFZ
/uvH/WBbyPgp68J4NPJVd6waYObz1fnZSx214cnHfPNS/QQc71Wolhkm4Owa
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
cr/7/wDn4HpH
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{349.33757745030664`, 240.6003896220704},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0., 0.4999999642857143}, {-0.9999998571428571, 
    0.9999998571428571}, {0, 0.5}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], Automatic},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.2425013962472446`, -2.764810212654654, 1.5039995905332482`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.869116778980629*^9, {3.8691168161922073`*^9, 3.8691168264851294`*^9}, 
   3.869118113921975*^9},ExpressionUUID->"3d3c8e5d-5810-49cd-9991-\
b725352f80c2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"In", " ", "conclusion"}], ",", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "limits", " ", "of", " ", "integration", " ", "are", " ", 
      "0"}], " ", "<", " ", "E1", " ", "<", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", "s", "]"}], "/", "2"}]}], ",", " ", 
    RowBox[{
     RowBox[{"-", "1"}], " ", "<", " ", "costh", " ", "<", " ", "1"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Change", " ", "to", " ", "variables", " ", "between", " ", "zero", " ", 
      "and", " ", 
      RowBox[{"one", ":", " ", "E1"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", "s", "]"}], "/", "2"}], " ", "e1"}]}], ",", " ", 
    RowBox[{"costh", " ", "=", " ", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{"2", "t"}]}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8691168377882223`*^9, 3.869116917931686*^9}, {
  3.869117309289941*^9, 
  3.8691173110253363`*^9}},ExpressionUUID->"dbd6ad51-2b53-4ba5-9674-\
a40375d0018d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Sqrt", "[", "s", "]"}], "/", "2"}], " ", "e1"}], ",", 
        "e1"}], "]"}], "*", 
      RowBox[{"D", "[", 
       RowBox[{
        RowBox[{"1", "-", 
         RowBox[{"2", "t"}]}], " ", ",", "t"}], "]"}], "*", "integrand1"}], "/.", 
     RowBox[{"sinth", "\[Rule]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "-", 
        RowBox[{"costh", "^", "2"}]}], "]"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"E1", "\[Rule]", 
       RowBox[{
        RowBox[{
         RowBox[{"Sqrt", "[", "s", "]"}], "/", "2"}], " ", "e1"}]}], ",", 
      RowBox[{"costh", " ", "\[Rule]", 
       RowBox[{"1", "-", 
        RowBox[{"2", "t"}]}]}]}], " ", "}"}]}], "//", "Simplify"}]}]], "Input",\

 CellChangeTimes->{{3.869116920038361*^9, 3.869116980300849*^9}, {
  3.869117315009026*^9, 
  3.869117320756505*^9}},ExpressionUUID->"18d3e800-5364-4865-82ab-\
a93a767625e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox["2", 
     RowBox[{"2", "-", 
      RowBox[{"3", " ", "d"}]}]], " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", "d"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t"}], ")"}], 
     RowBox[{"d", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e1"}], ")"}], " ", "e1", " ", "s"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"e1", " ", "t"}]}]], ")"}], "d"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"e1", " ", "t"}]}], ")"}], "3"], " ", 
    RowBox[{"HeavisideTheta", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"e1", " ", 
        SqrtBox["s"]}], "2"], ",", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e1"}], ")"}], " ", 
        SqrtBox["s"]}], 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "e1", " ", "t"}]}]], ",", 
      FractionBox[
       RowBox[{
        SqrtBox["s"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "e1", " ", "t"}], "+", 
          RowBox[{
           SuperscriptBox["e1", "2"], " ", "t"}]}], ")"}]}], 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "e1", " ", "t"}]}]]}], "]"}], " ", 
    RowBox[{"Omega", "[", 
     RowBox[{
      RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
    RowBox[{"Omega", "[", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "d"}], "]"}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "e1"}], ")"}], "4"], " ", 
    SuperscriptBox["e1", "4"], " ", 
    SuperscriptBox["s", "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "t"}], ")"}], "3"], " ", 
    SuperscriptBox["t", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.869116977409752*^9, 3.869116980732585*^9}, 
   3.86911723910098*^9, {3.8691173218930283`*^9, 3.869117346569582*^9}, 
   3.8691179535544453`*^9, 
   3.869118117467783*^9},ExpressionUUID->"052ff114-6f97-467b-8a2c-\
6eae61bf03ef"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "The", " ", "HeavisideTheta", " ", "is", " ", "now", " ", "always", " ", 
    "one"}], ",", " ", 
   RowBox[{"so", " ", "we", " ", "drop", " ", "it"}]}], " ", "*)"}]], "Input",\

 CellChangeTimes->{{3.869116992581192*^9, 
  3.8691170224317408`*^9}},ExpressionUUID->"c84aeaea-b1f5-42f6-8c1f-\
b4c4710a106c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand2", "=", 
  RowBox[{"integrand2", "/.", 
   RowBox[{
    RowBox[{"HeavisideTheta", "[", "a___", "]"}], "\[Rule]", 
    "1"}]}]}]], "Input",
 CellChangeTimes->{{3.869117026823505*^9, 
  3.869117032082428*^9}},ExpressionUUID->"d916b358-cc8f-401a-91ac-\
297d1746dbfe"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"2", "-", 
     RowBox[{"3", " ", "d"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "d"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t"}], ")"}], 
    RowBox[{"d", "/", "2"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "e1"}], ")"}], " ", "e1", " ", "s"}], 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"e1", " ", "t"}]}]], ")"}], "d"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"e1", " ", "t"}]}], ")"}], "3"], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], "]"}]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "e1"}], ")"}], "4"], " ", 
   SuperscriptBox["e1", "4"], " ", 
   SuperscriptBox["s", "5"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "t"}], ")"}], "3"], " ", 
   SuperscriptBox["t", "2"]}]]], "Output",
 CellChangeTimes->{
  3.8691170325580463`*^9, 3.869117240954866*^9, {3.869117323651651*^9, 
   3.86911734790129*^9}, 3.8691179594612217`*^9, 
   3.869118118956541*^9},ExpressionUUID->"d3d526f9-990d-4794-89df-\
5343e2e635a7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Set", " ", "d"}], " ", "=", " ", 
   RowBox[{"4", " ", "-", " ", 
    RowBox[{"2", " ", "eps"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869117198161306*^9, 
  3.869117210510244*^9}},ExpressionUUID->"760f3552-d5d9-4a61-b0cd-\
52b16194efac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand2", "=", 
  RowBox[{
   RowBox[{"integrand2", "/.", 
    RowBox[{"d", "\[Rule]", 
     RowBox[{"4", "-", 
      RowBox[{"2", "eps"}]}]}]}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.8691172161241903`*^9, 
  3.869117221140971*^9}},ExpressionUUID->"abb0afa5-2941-40ad-b54f-\
d563ffe7c8ea"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["4", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"3", " ", "eps"}]}]], " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{
      RowBox[{"-", "5"}], "+", 
      RowBox[{"4", " ", "eps"}]}]], " ", "t", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t"}], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "-", "eps"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e1"}], ")"}], " ", "e1", " ", "s"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        RowBox[{"e1", " ", "t"}]}]], ")"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "eps"}]], " ", 
    RowBox[{"Omega", "[", 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "eps"}]}], "]"}], " ", 
    RowBox[{"Omega", "[", 
     RowBox[{"3", "-", 
      RowBox[{"2", " ", "eps"}]}], "]"}]}], 
   RowBox[{"s", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"e1", " ", "t"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.869117221574353*^9, 3.869117242342186*^9}, {
   3.869117325832412*^9, 3.8691173489618587`*^9}, 3.8691179625047092`*^9, 
   3.869118120364872*^9},ExpressionUUID->"adb057cb-aa99-4efa-b606-\
5c4199a1176d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Simplify", " ", "a", " ", "bit"}], ",", " ", 
   RowBox[{
    RowBox[{"taking", " ", "into", " ", "account", " ", "0"}], " ", "<", " ", 
    "t", " ", "<", " ", 
    RowBox[{"1", " ", "and", " ", "0"}], " ", "<", " ", "e1", " ", "<", 
    "1"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869117091061397*^9, 3.869117092794565*^9}, {
  3.869117137692225*^9, 
  3.869117160861732*^9}},ExpressionUUID->"39930f32-6d1d-44e5-a2aa-\
db3a98a2119d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrand2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"integrand2", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], "\[Rule]", 
        RowBox[{"MONE", 
         RowBox[{"(", 
          RowBox[{"1", "-", "t"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", "e1"}], "\[Rule]", 
        RowBox[{"MONE", 
         RowBox[{"(", 
          RowBox[{"1", "-", "e1"}], ")"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"e1", " ", "t"}]}], "\[Rule]", 
        RowBox[{"MONE", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"e1", " ", "t"}]}], ")"}]}]}]}], "}"}]}], "/.", 
    RowBox[{"MONE", "\[Rule]", 
     RowBox[{"-", "1"}]}]}], "//", "PowerExpand"}]}]], "Input",
 CellChangeTimes->{{3.8691171658838387`*^9, 3.869117190612671*^9}, {
  3.8691173383602743`*^9, 
  3.869117342565022*^9}},ExpressionUUID->"b06994e0-b91e-44c7-8499-\
77b908aed0b0"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["4", 
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"3", " ", "eps"}]}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "e1"}], ")"}], 
   RowBox[{
    RowBox[{"-", "2"}], " ", "eps"}]], " ", 
  SuperscriptBox["e1", 
   RowBox[{
    RowBox[{"-", "2"}], " ", "eps"}]], " ", 
  SuperscriptBox["\[Pi]", 
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"4", " ", "eps"}]}]], " ", 
  SuperscriptBox["s", 
   RowBox[{
    RowBox[{"-", "1"}], "-", 
    RowBox[{"2", " ", "eps"}]}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "t"}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "-", "eps"}]], " ", 
  SuperscriptBox["t", 
   RowBox[{"-", "eps"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"e1", " ", "t"}]}], ")"}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"2", " ", "eps"}]}]], " ", 
  RowBox[{"Omega", "[", 
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "eps"}]}], "]"}], " ", 
  RowBox[{"Omega", "[", 
   RowBox[{"3", "-", 
    RowBox[{"2", " ", "eps"}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.869117190932415*^9, 3.8691172454135323`*^9, {3.8691173273900423`*^9, 
   3.869117350349546*^9}, 3.869117974116486*^9, 
   3.869118121671876*^9},ExpressionUUID->"892b41fa-7027-4ec7-a775-\
98715f09817e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Now", " ", "integrate", " ", "in", " ", "t", " ", "first"}], ",", 
   " ", 
   RowBox[{
   "we", " ", "will", " ", "not", " ", "generate", " ", "conditions"}]}], " ",
   "*)"}]], "Input",
 CellChangeTimes->{{3.869117522675417*^9, 3.8691175396136217`*^9}, {
  3.8691175784723043`*^9, 
  3.869117585519354*^9}},ExpressionUUID->"3319373e-8239-47df-8000-\
c538c199858b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integral", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrand2", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"GenerateConditions", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.869117249816948*^9, 3.8691172950165977`*^9}, {
   3.869117487198271*^9, 3.869117521298874*^9}, {3.869117551551325*^9, 
   3.869117552202273*^9}, 
   3.869117595033617*^9},ExpressionUUID->"f44b2772-c3e7-4c87-9a33-\
a085d6bd328b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"4", " ", "eps"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", "e1"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", "eps"}]], " ", 
   SuperscriptBox["e1", 
    RowBox[{
     RowBox[{"-", "2"}], " ", "eps"}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["9", "2"]}], "+", 
     RowBox[{"4", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"-", "eps"}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{
    FractionBox["1", "2"], "-", "eps"}], "]"}]]], "Output",
 CellChangeTimes->{{3.869117263986013*^9, 3.869117302181368*^9}, 
   3.8691173575743427`*^9, 3.869117491669388*^9, {3.869117547371777*^9, 
   3.869117553298924*^9}, {3.869117592556262*^9, 3.869117595810926*^9}, 
   3.869117763402322*^9, 3.869117997398425*^9, 
   3.869118123317286*^9},ExpressionUUID->"c78bce63-40f8-4ff0-b8b4-\
71fd04868a7b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Then", " ", "integrate", " ", "in", " ", "e1"}], ",", " ", 
   RowBox[{
   "we", " ", "will", " ", "not", " ", "generate", " ", "conditions"}]}], " ",
   "*)"}]], "Input",
 CellChangeTimes->{{3.8691176021930647`*^9, 
  3.8691176068035517`*^9}},ExpressionUUID->"64d1610f-5280-4147-8ecc-\
7da7bbce4ecb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integral", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integral", ",", 
    RowBox[{"{", 
     RowBox[{"e1", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"GenerateConditions", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.869117370143072*^9, 3.86911737243181*^9}, {
  3.86911749636823*^9, 3.869117497788451*^9}, {3.869117554936376*^9, 
  3.8691175553687983`*^9}, {3.869117611086731*^9, 
  3.869117615514331*^9}},ExpressionUUID->"8423d1c5-c356-4534-b903-\
cf29425cf1e3"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"3", " ", "eps"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"4", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "eps"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "eps"}], "]"}], "2"], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "-", 
    RowBox[{"3", " ", "eps"}]}], "]"}]]], "Output",
 CellChangeTimes->{3.86911737504918*^9, 3.869117498544725*^9, 
  3.869117556222252*^9, 3.8691176172752457`*^9, 3.869117768749105*^9, 
  3.8691181256065483`*^9},ExpressionUUID->"acf28b15-3d71-4832-accc-\
c11333b74640"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Last", ",", " ", 
   RowBox[{
    RowBox[{"subsitute", " ", "the", " ", "expression", " ", "for", " ", 
     RowBox[{"Omega", ":", " ", 
      RowBox[{"Omega", "[", "p", "]"}]}]}], " ", "=", " ", 
    RowBox[{"2", " ", 
     RowBox[{
      RowBox[{"Pi", "^", 
       RowBox[{"(", 
        RowBox[{"p", "/", "2"}], ")"}]}], "/", 
      RowBox[{"Gamma", "[", 
       RowBox[{"p", "/", "2"}], "]"}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869117619908318*^9, 
  3.869117649310935*^9}},ExpressionUUID->"4661d425-5552-42c6-8171-\
346f202baf7c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integral", "=", 
  RowBox[{
   RowBox[{"integral", "/.", 
    RowBox[{
     RowBox[{"Omega", "[", "p_", "]"}], "\[Rule]", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"Pi", "^", 
        RowBox[{"(", 
         RowBox[{"p", "/", "2"}], ")"}]}], "/", 
       RowBox[{"Gamma", "[", 
        RowBox[{"p", "/", "2"}], "]"}]}]}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8691176542665052`*^9, 
  3.869117662820241*^9}},ExpressionUUID->"0eecb98a-f30c-4cf3-aeb7-\
c9ce3b385f33"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"3", " ", "eps"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5", "2"]}], "+", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "eps"}], "]"}], "2"]}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     RowBox[{"3", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["3", "2"], "-", "eps"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.86911766350688*^9, 3.8691177706527243`*^9, 
  3.869118128049798*^9},ExpressionUUID->"9d71c9e8-d531-4929-88e0-\
7020e8b55a95"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"We", " ", "obtained", " ", 
   RowBox[{"eq", ".", " ", 
    RowBox[{"(", "3.132", ")"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691177222141447`*^9, 
  3.8691177411600723`*^9}},ExpressionUUID->"74f81d31-7ecf-4e3b-b8a3-\
42a709f6dbc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integral", "=", 
  RowBox[{"integral", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "^", "z_"}], "\[RuleDelayed]", 
     RowBox[{"2", "^", 
      RowBox[{"Expand", "[", 
       RowBox[{"2", "z"}], "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.86911766917992*^9, 3.8691177125316153`*^9}, {
  3.869117756153924*^9, 
  3.869117760236021*^9}},ExpressionUUID->"27e5ec50-f37d-48c6-9173-\
2c4c90ce7eab"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "8"}], "+", 
     RowBox[{"6", " ", "eps"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5", "2"]}], "+", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "eps"}], "]"}], "2"]}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     RowBox[{"3", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["3", "2"], "-", "eps"}], "]"}]}]]], "Output",
 CellChangeTimes->{{3.8691176830619173`*^9, 3.8691177127983923`*^9}, {
   3.869117758512144*^9, 3.869117773227694*^9}, 
   3.869118129895926*^9},ExpressionUUID->"5258b51f-4bbe-494b-a063-\
9c8f20fbc363"]
}, Open  ]],

Cell["Alternate calculation based on invariants", "Text",
 CellChangeTimes->{{3.66281610878771*^9, 3.662816156701271*^9}, {
  3.8485522569410048`*^9, 3.848552257045532*^9}, {3.8485530383357677`*^9, 
  3.8485530492480087`*^9}, {3.8667749797689342`*^9, 3.866774980252771*^9}, {
  3.8691034630831823`*^9, 3.8691034754047117`*^9}, {3.869118164032617*^9, 
  3.8691181768174667`*^9}},
 Background->RGBColor[
  1, 1, 0.85],ExpressionUUID->"8cffd45e-5926-4a5a-82de-b9bc1d459b3b"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Solve", " ", "for", " ", "E1"}], ",", " ", 
   RowBox[{
   "E2", " ", "and", " ", "costh", " ", "in", " ", "terms", " ", "of", " ", 
    "invariants"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869118183331521*^9, 
  3.8691182003561707`*^9}},ExpressionUUID->"a2b9c91d-6898-48b9-b4cf-\
137cd501227b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EToInvariants", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s12", "\[Equal]", 
        RowBox[{"2", "E1", " ", "E2", 
         RowBox[{"(", 
          RowBox[{"1", "-", "costh"}], ")"}]}]}], ",", 
       RowBox[{"s13", "\[Equal]", 
        RowBox[{
         RowBox[{"2", "E1", " ", 
          RowBox[{"Sqrt", "[", "s", "]"}]}], "-", 
         RowBox[{"2", "E1", " ", "E2", 
          RowBox[{"(", 
           RowBox[{"1", "-", "costh"}], ")"}]}]}]}], ",", 
       RowBox[{"s23", "\[Equal]", 
        RowBox[{
         RowBox[{"2", "E2", " ", 
          RowBox[{"Sqrt", "[", "s", "]"}]}], "-", 
         RowBox[{"2", "E1", " ", "E2", 
          RowBox[{"(", 
           RowBox[{"1", "-", "costh"}], ")"}]}]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"E1", ",", "E2", ",", "costh"}], "}"}]}], "]"}], "//", 
   "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8691182107934437`*^9, 
  3.8691182389526577`*^9}},ExpressionUUID->"3fd17e1c-cd69-4a90-8473-\
df6cd12abca5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"E1", "\[Rule]", 
    FractionBox[
     RowBox[{"s12", "+", "s13"}], 
     RowBox[{"2", " ", 
      SqrtBox["s"]}]]}], ",", 
   RowBox[{"E2", "\[Rule]", 
    FractionBox[
     RowBox[{"s12", "+", "s23"}], 
     RowBox[{"2", " ", 
      SqrtBox["s"]}]]}], ",", 
   RowBox[{"costh", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "s", " ", "s12"}], "+", 
      SuperscriptBox["s12", "2"], "+", 
      RowBox[{"s12", " ", "s13"}], "+", 
      RowBox[{"s12", " ", "s23"}], "+", 
      RowBox[{"s13", " ", "s23"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s12", "+", "s13"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"s12", "+", "s23"}], ")"}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.869118239990088*^9, 3.869122378813635*^9, 
  3.869122612810307*^9},ExpressionUUID->"025bdc62-184d-4eb0-8230-\
c8b751f7d516"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Compute", " ", "the", " ", "Jacobian", " ", "of", " ", "the", " ", 
   "transformation"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869118247387969*^9, 
  3.8691182632906322`*^9}},ExpressionUUID->"c0e6fe95-213a-428e-8978-\
21c531c5789f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"jacobian", "=", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"E1", "/.", "EToInvariants"}], ",", "s12"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"E2", "/.", "EToInvariants"}], ",", "s12"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"costh", "/.", "EToInvariants"}], ",", "s12"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"E1", "/.", "EToInvariants"}], ",", "s13"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"E2", "/.", "EToInvariants"}], ",", "s13"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"costh", "/.", "EToInvariants"}], ",", "s13"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"E1", "/.", "EToInvariants"}], ",", "s23"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"E2", "/.", "EToInvariants"}], ",", "s23"}], "]"}], ",", 
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"costh", "/.", "EToInvariants"}], ",", "s23"}], "]"}]}], 
       "}"}]}], "}"}], "]"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.869118268952362*^9, 
  3.869118336800489*^9}},ExpressionUUID->"33eebb04-b77a-4790-8cb3-\
13651bf2b74e"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"s12", "+", "s13"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"s12", "+", "s23"}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.869118334032344*^9, 3.8691183371292963`*^9}, 
   3.869122380269754*^9, 
   3.869122613887182*^9},ExpressionUUID->"9c6cc682-50c7-4d81-a91f-\
251d21e84902"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Make", " ", "the", " ", "substitution", " ", "and", " ", "add", " ", 
   "explicitly", " ", "the", " ", "HeavisieTheta", " ", "functions", " ", 
   "for", " ", "the", " ", "limits", " ", "of", " ", "the", " ", "costh", " ", 
   RowBox[{"integration", ".", " ", "Note"}], " ", "the", " ", "jacobian", 
   " ", "will", " ", "be", " ", "seen", " ", "to", " ", "be", " ", "negative",
    " ", "and", " ", "so", " ", "add", " ", "an", " ", "explicit", " ", 
   "negative", " ", "sign", " ", "to", " ", "implement", " ", "the", " ", 
   "absolute", " ", 
   RowBox[{"value", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869118463602416*^9, 3.869118500001521*^9}, {
  3.869118627772698*^9, 3.869118674884544*^9}, {3.869122358708756*^9, 
  3.869122365938553*^9}, {3.869122398427436*^9, 3.8691224389909573`*^9}, {
  3.869122500445162*^9, 
  3.869122502638764*^9}},ExpressionUUID->"7c28b65a-26b9-4536-8793-\
dd7f93e0fd4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrandinv", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "jacobian"}], "*", "integrand", "*", 
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{"1", "-", "costh"}], "]"}], 
        RowBox[{"HeavisideTheta", "[", 
         RowBox[{"costh", "+", "1"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"sinth", "\[Rule]", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"costh", "^", "2"}]}], "]"}]}], "}"}]}], "/.", 
      "EToInvariants"}], "//", "Simplify"}], "//", "PowerExpand"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.869118503900996*^9, 3.869118555155925*^9}, {
  3.8691185894735727`*^9, 
  3.869118622463765*^9}},ExpressionUUID->"244635c5-23b9-4d10-a2ad-\
f57919dab7dc"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"s13", " ", "s23"}]], 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"2", "-", 
     RowBox[{"3", " ", "d"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "d"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{"1", "-", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox["s12", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "s"}], " ", "s12"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s12", "+", "s13"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s12", "+", "s23"}], ")"}]}]}], ")"}], 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "d"}], ")"}]}]], " ", 
   RowBox[{"DiracDelta", "[", 
    RowBox[{"s", "-", "s12", "-", "s13", "-", "s23"}], "]"}], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"s12", "+", "s13"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]], ",", 
     FractionBox[
      RowBox[{
       RowBox[{"2", " ", "s"}], "-", 
       RowBox[{"2", " ", "s12"}], "-", "s13", "-", "s23"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]], ",", 
     FractionBox[
      RowBox[{"2", " ", "s", " ", "s12"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s12", "+", "s13"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s12", "+", "s23"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"s12", "+", "s23"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]], ",", 
     RowBox[{"2", "-", 
      FractionBox[
       RowBox[{"2", " ", "s", " ", "s12"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"s12", "+", "s13"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"s12", "+", "s23"}], ")"}]}]]}]}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.8691185556281347`*^9, {3.869118591470677*^9, 3.869118595396842*^9}, 
   3.869118681601924*^9, {3.8691223707407637`*^9, 3.8691223818727283`*^9}, 
   3.869122440527326*^9, 
   3.869122616070531*^9},ExpressionUUID->"8679ffa5-1cc1-4937-bc56-\
68bb2d1e9128"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Solve", " ", "the", " ", "Dirac", " ", "delta", " ", "constraint", " ", 
   "for", " ", 
   RowBox[{"e", ".", "g", ".", " ", "s12"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869103854386984*^9, 3.869103905798418*^9}, {
  3.8691039596713657`*^9, 3.8691039725567207`*^9}, {3.869105183743156*^9, 
  3.869105185153235*^9}, {3.869116199104644*^9, 3.869116199359598*^9}, {
  3.8691187145929823`*^9, 
  3.8691187150486517`*^9}},ExpressionUUID->"196c60c2-36ae-4bb4-9e37-\
3778e0085318"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiracDeltaArgumentinv", "=", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"integrandinv", ",", 
     RowBox[{
      RowBox[{"DiracDelta", "[", "z_", "]"}], "\[Rule]", "z"}], ",", 
     RowBox[{"-", "1"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8691039766323423`*^9, 3.869104011359622*^9}, {
  3.869118720870701*^9, 
  3.869118722803892*^9}},ExpressionUUID->"f98261ea-1078-4b61-ac4f-\
bf191d239be3"],

Cell[BoxData[
 RowBox[{"s", "-", "s12", "-", "s13", "-", "s23"}]], "Output",
 CellChangeTimes->{{3.8691040073558607`*^9, 3.8691040128465014`*^9}, 
   3.8691051868891077`*^9, 3.869106799863082*^9, 3.869110817065968*^9, 
   3.86911504636659*^9, 3.869115429376272*^9, 3.8691162011536417`*^9, 
   3.869117933404567*^9, 3.869118100808908*^9, 3.8691187245435658`*^9, 
   3.869122383320074*^9, 3.8691224419408503`*^9, 
   3.869122617644682*^9},ExpressionUUID->"3250857f-04ba-42a0-aa68-\
2d454f0c6d14"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s12solution", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"DiracDeltaArgumentinv", "\[Equal]", "0"}], ",", "s12"}], "]"}], 
   "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8691040200985394`*^9, 3.869104051298048*^9}, {
  3.869105189614191*^9, 3.869105190701002*^9}, {3.869116203052415*^9, 
  3.869116205613296*^9}, {3.869118727126461*^9, 
  3.869118732444408*^9}},ExpressionUUID->"afdc2c80-7107-4a28-802c-\
dd7d42659690"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"s12", "\[Rule]", 
   RowBox[{"s", "-", "s13", "-", "s23"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8691040410636053`*^9, 3.869104051783041*^9}, 
   3.869105191033164*^9, 3.869106800407826*^9, 3.86911081791901*^9, 
   3.8691150543719683`*^9, 3.86911543038223*^9, 3.869116206020773*^9, 
   3.8691179346026697`*^9, 3.869118101545906*^9, 3.8691187331608953`*^9, 
   3.869122384093642*^9, 3.869122444762796*^9, 
   3.8691226194976683`*^9},ExpressionUUID->"f7c2220c-b7ca-472c-ba08-\
6fff99f36d62"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Integrate", " ", "over", " ", "s12", " ", "with", " ", "the", " ", "Dirac",
    " ", 
   RowBox[{"delta", ".", " ", "Note"}], " ", "the", " ", "derivative", " ", 
   "of", " ", "the", " ", "argument", " ", "of", " ", "the", " ", "Dirac", 
   " ", "delta", " ", "is", " ", "negative", " ", "and", " ", "so", " ", "we",
    " ", "add", " ", "an", " ", "explicit", " ", "negative", " ", "sign", " ",
    "to", " ", "implement", " ", "the", " ", "absolute", " ", 
   RowBox[{"value", "."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691162128359823`*^9, 3.869116236534748*^9}, {
  3.869118737317647*^9, 3.869118737805209*^9}, {3.8691224479793863`*^9, 
  3.8691225222391157`*^9}},ExpressionUUID->"80e21aa2-646e-4cd7-9513-\
cfffe15c9d99"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrandinv1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", 
      RowBox[{"D", "[", 
       RowBox[{"DiracDeltaArgumentinv", ",", "s12"}], "]"}]}], "*", 
     "integrandinv"}], "/.", "s12solution"}], "//", "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.869104065923209*^9, 3.86910414032629*^9}, {
   3.869105195093297*^9, 3.8691051970316553`*^9}, 3.869115144089223*^9, {
   3.8691162449994698`*^9, 3.869116250234456*^9}, {3.8691187423502073`*^9, 
   3.869118754504034*^9}, 
   3.869122621912422*^9},ExpressionUUID->"054d67cb-038e-4e8e-91d2-\
a5e738a7d066"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["s13", "3"], " ", 
    SuperscriptBox["s23", "3"]}]], 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"2", "-", 
     RowBox[{"3", " ", "d"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "d"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{"1", "-", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s", "-", "s13", "-", "s23"}], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s13", " ", "s23"}], ")"}], 
    RowBox[{"d", "/", "2"}]], " ", 
   RowBox[{"DiracDelta", "[", "0", "]"}], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"s", "-", "s13"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]], ",", 
     FractionBox[
      RowBox[{"s", "-", "s23"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]], ",", 
     FractionBox[
      RowBox[{"2", " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "s13", "-", "s23"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "s13"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "s23"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"2", " ", "s13", " ", "s23"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "s13"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "s23"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"s13", "+", "s23"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]]}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.8691041371024227`*^9, 3.869104140886508*^9}, 
   3.869105197433852*^9, 3.869106803191722*^9, 3.869110819464078*^9, 
   3.8691150558017807`*^9, 3.869115432037366*^9, 3.869116251412575*^9, 
   3.869117936584094*^9, 3.8691181031178017`*^9, 3.869118755458126*^9, 
   3.869122524103424*^9, 
   3.869122622337034*^9},ExpressionUUID->"6c942f54-7155-43a1-b733-\
ad1f5769d3a5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Indeed", " ", "we", " ", "have", " ", 
   RowBox[{"DiracDelta", "[", "0", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
    "showing", " ", "the", " ", "substitution", " ", "is", " ", "correct"}], 
    ")"}], " ", "that", " ", "we", " ", "drop"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869116260837554*^9, 
  3.8691163083815413`*^9}},ExpressionUUID->"2b29fc3a-cfc0-47e2-927c-\
dd75915c7cad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrandinv1", "=", 
  RowBox[{"integrandinv1", "/.", 
   RowBox[{
    RowBox[{"DiracDelta", "[", "0", "]"}], "\[Rule]", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.8691163120110683`*^9, 3.869116319351365*^9}, {
  3.869118770098176*^9, 
  3.869118773701796*^9}},ExpressionUUID->"ae9e0541-4767-4203-a96b-\
71a2314dca57"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox["s13", "3"], " ", 
    SuperscriptBox["s23", "3"]}]], 
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"2", "-", 
     RowBox[{"3", " ", "d"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "d"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{"1", "-", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s", "-", "s13", "-", "s23"}], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s13", " ", "s23"}], ")"}], 
    RowBox[{"d", "/", "2"}]], " ", 
   RowBox[{"HeavisideTheta", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"s", "-", "s13"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]], ",", 
     FractionBox[
      RowBox[{"s", "-", "s23"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]], ",", 
     FractionBox[
      RowBox[{"2", " ", "s", " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "s13", "-", "s23"}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "s13"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "s23"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"2", " ", "s13", " ", "s23"}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "s13"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "-", "s23"}], ")"}]}]], ",", 
     FractionBox[
      RowBox[{"s13", "+", "s23"}], 
      RowBox[{"2", " ", 
       SqrtBox["s"]}]]}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.8691163200238123`*^9, 3.869117940226157*^9, 
  3.8691181052416*^9, 3.8691187749037247`*^9, 3.86912252718692*^9, 
  3.869122625292636*^9},ExpressionUUID->"80a4d184-ffc2-46e3-8ab7-\
7921da1774ea"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Examine", " ", "the", " ", "constraints"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691163272552357`*^9, 3.869116336508317*^9}, {
  3.8691187868424177`*^9, 3.86911882892583*^9}, {3.8691225663692617`*^9, 
  3.869122566891368*^9}},ExpressionUUID->"0ce4e0fd-a3c2-4605-9b26-\
fda5227591ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HeavisideThetaArgumentsinv", "=", 
  RowBox[{"Cases", "[", 
   RowBox[{"integrandinv1", ",", 
    RowBox[{
     RowBox[{"HeavisideTheta", "[", "z__", "]"}], "\[Rule]", "z"}], ",", 
    RowBox[{"-", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.869122553646351*^9, 
  3.8691225558537493`*^9}},ExpressionUUID->"ee45f283-5aba-4b3b-bcf1-\
ee34c9a9658c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"s", "-", "s13"}], 
    RowBox[{"2", " ", 
     SqrtBox["s"]}]], ",", 
   FractionBox[
    RowBox[{"s", "-", "s23"}], 
    RowBox[{"2", " ", 
     SqrtBox["s"]}]], ",", 
   FractionBox[
    RowBox[{"2", " ", "s", " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", "s13", "-", "s23"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "-", "s13"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", "s23"}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"2", " ", "s13", " ", "s23"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "-", "s13"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", "s23"}], ")"}]}]], ",", 
   FractionBox[
    RowBox[{"s13", "+", "s23"}], 
    RowBox[{"2", " ", 
     SqrtBox["s"]}]]}], "}"}]], "Output",
 CellChangeTimes->{3.869122556445631*^9, 
  3.8691226271871634`*^9},ExpressionUUID->"32ef6328-0dc9-4d37-acda-\
d4a0cef659f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "It", " ", "is", " ", "trivial", " ", "to", " ", "read", " ", "off", " ", 
     "that", " ", "0"}], " ", "<", " ", "s13", " ", "<", " ", "s"}], ",", " ", 
   RowBox[{"0", " ", "<", " ", "s23", " ", "<", " ", 
    RowBox[{
     RowBox[{"s", " ", "and", " ", "s"}], " ", "-", " ", "s13", " ", "-", " ",
      "s23"}], " ", ">", " ", "0"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.869122571448229*^9, 
  3.869122573146882*^9}},ExpressionUUID->"936dce8e-2b47-4a21-983b-\
417d627ef77e"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"In", " ", "conclusion"}], ",", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "limits", " ", "of", " ", "integration", " ", "are", " ", 
     RowBox[{"e", ".", "g", ".", " ", "0"}]}], " ", "<", " ", "s13", " ", "<",
     " ", 
    RowBox[{"s", " ", "-", " ", "s23"}]}], ",", " ", 
   RowBox[{"0", " ", "<", " ", "s23", " ", "<", " ", "s"}]}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8691168377882223`*^9, 3.869116917931686*^9}, {
  3.869117309289941*^9, 3.8691173110253363`*^9}, {3.869118848163157*^9, 
  3.8691188746275167`*^9}, {3.869118948277691*^9, 3.8691189490519238`*^9}, {
  3.8691222335558157`*^9, 
  3.869122233947542*^9}},ExpressionUUID->"d7a7fcca-4a97-4f32-a81d-\
3c9e62f101fd"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "The", " ", "HeavisideTheta", " ", "is", " ", "always", " ", "one", " ", 
    "in", " ", "this", " ", "region"}], ",", " ", 
   RowBox[{"so", " ", "we", " ", "drop", " ", "it"}]}], " ", "*)"}]], "Input",\

 CellChangeTimes->{{3.869118978369631*^9, 
  3.869118993439459*^9}},ExpressionUUID->"4593a7d5-e582-42da-87bd-\
086cc7ffb932"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrandinv2", "=", 
  RowBox[{"integrandinv1", "/.", 
   RowBox[{
    RowBox[{"HeavisideTheta", "[", "a___", "]"}], "\[Rule]", 
    "1"}]}]}]], "Input",
 CellChangeTimes->{{3.869118906034734*^9, 
  3.8691189103696547`*^9}},ExpressionUUID->"8e604403-5369-4711-87b6-\
3a0c1a392add"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"2", "-", 
     RowBox[{"3", " ", "d"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "d"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{"1", "-", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s", "-", "s13", "-", "s23"}], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s13", " ", "s23"}], ")"}], 
    RowBox[{"d", "/", "2"}]], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "d"}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "d"}], "]"}]}], 
  RowBox[{
   SuperscriptBox["s13", "3"], " ", 
   SuperscriptBox["s23", "3"]}]]], "Output",
 CellChangeTimes->{3.8691189213017063`*^9, 3.8691189960223494`*^9, 
  3.869122588767886*^9, 
  3.8691226297374277`*^9},ExpressionUUID->"0a5a3eb2-5d76-4c26-bcb5-\
fbff96c48cae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Set", " ", "d"}], " ", "=", " ", 
   RowBox[{"4", " ", "-", " ", 
    RowBox[{"2", " ", "eps"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869117198161306*^9, 
  3.869117210510244*^9}},ExpressionUUID->"7b042e12-4950-4200-a9aa-\
28c7442f8b42"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integrandinv2", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"integrandinv2", "/.", 
     RowBox[{"d", "\[Rule]", 
      RowBox[{"4", "-", 
       RowBox[{"2", "eps"}]}]}]}], "//", "Simplify"}], "//", 
   "PowerExpand"}]}]], "Input",
 CellChangeTimes->{{3.8691172161241903`*^9, 3.869117221140971*^9}, {
  3.8691190111721573`*^9, 3.869119013604677*^9}, {3.869122320789363*^9, 
  3.869122322927394*^9}},ExpressionUUID->"6f1b6f5e-eaa2-48bc-92c6-\
cc8d1ab431ee"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["4", 
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"3", " ", "eps"}]}]], " ", 
  SuperscriptBox["\[Pi]", 
   RowBox[{
    RowBox[{"-", "5"}], "+", 
    RowBox[{"4", " ", "eps"}]}]], " ", 
  SuperscriptBox["s", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "eps"}]], " ", 
  SuperscriptBox["s13", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "eps"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"s", "-", "s13", "-", "s23"}], ")"}], 
   RowBox[{"-", "eps"}]], " ", 
  SuperscriptBox["s23", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "eps"}]], " ", 
  RowBox[{"Omega", "[", 
   RowBox[{"2", "-", 
    RowBox[{"2", " ", "eps"}]}], "]"}], " ", 
  RowBox[{"Omega", "[", 
   RowBox[{"3", "-", 
    RowBox[{"2", " ", "eps"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.869117221574353*^9, 3.869117242342186*^9}, {
   3.869117325832412*^9, 3.8691173489618587`*^9}, 3.8691179625047092`*^9, 
   3.869118120364872*^9, {3.869119007372163*^9, 3.8691190140801973`*^9}, 
   3.869122323251873*^9, 3.869122589950712*^9, 
   3.869122630769166*^9},ExpressionUUID->"4b2b1411-3814-436e-be4d-\
c7841351257f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Now", " ", "integrate", " ", "in", " ", "s13", " ", "first"}], 
   ",", " ", 
   RowBox[{
   "we", " ", "will", " ", "not", " ", "generate", " ", "conditions"}]}], " ",
   "*)"}]], "Input",
 CellChangeTimes->{{3.869117522675417*^9, 3.8691175396136217`*^9}, {
  3.8691175784723043`*^9, 3.869117585519354*^9}, {3.869119021902647*^9, 
  3.8691190228573*^9}},ExpressionUUID->"b228c682-db06-4bf1-86d4-e49f0691900a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralinv", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integrandinv2", ",", 
    RowBox[{"{", 
     RowBox[{"s13", ",", "0", ",", 
      RowBox[{"s", "-", "s23"}]}], "}"}], ",", 
    RowBox[{"GenerateConditions", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.869117249816948*^9, 3.8691172950165977`*^9}, {
   3.869117487198271*^9, 3.869117521298874*^9}, {3.869117551551325*^9, 
   3.869117552202273*^9}, 3.869117595033617*^9, {3.869119026999485*^9, 
   3.869119032609187*^9}, {3.869122224478303*^9, 
   3.869122229685631*^9}},ExpressionUUID->"fba96215-9560-4a61-afb8-\
22661b26a894"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"4", " ", "eps"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["9", "2"]}], "+", 
     RowBox[{"4", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "eps"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"s", "-", "s23"}], ")"}], 
    RowBox[{
     RowBox[{"-", "2"}], " ", "eps"}]], " ", 
   SuperscriptBox["s23", 
    RowBox[{
     RowBox[{"-", "1"}], "-", "eps"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"-", "eps"}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{
    FractionBox["1", "2"], "-", "eps"}], "]"}]]], "Output",
 CellChangeTimes->{{3.869117263986013*^9, 3.869117302181368*^9}, 
   3.8691173575743427`*^9, 3.869117491669388*^9, {3.869117547371777*^9, 
   3.869117553298924*^9}, {3.869117592556262*^9, 3.869117595810926*^9}, 
   3.869117763402322*^9, 3.869117997398425*^9, 3.869118123317286*^9, 
   3.869122240944275*^9, 3.869122325693728*^9, 3.869122591279881*^9, 
   3.8691226326058483`*^9},ExpressionUUID->"324c0dcf-d81e-4e1f-936d-\
3dfeab802c9a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Then", " ", "integrate", " ", "in", " ", "s23"}], ",", " ", 
   RowBox[{
   "we", " ", "will", " ", "not", " ", "generate", " ", "conditions"}]}], " ",
   "*)"}]], "Input",
 CellChangeTimes->{{3.8691176021930647`*^9, 3.8691176068035517`*^9}, {
  3.869122244235471*^9, 
  3.869122245273726*^9}},ExpressionUUID->"7809669e-fe00-49c8-a8d8-\
6b48144757db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralinv", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"integralinv", ",", 
    RowBox[{"{", 
     RowBox[{"s23", ",", "0", ",", "s"}], "}"}], ",", 
    RowBox[{"GenerateConditions", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.869117370143072*^9, 3.86911737243181*^9}, {
  3.86911749636823*^9, 3.869117497788451*^9}, {3.869117554936376*^9, 
  3.8691175553687983`*^9}, {3.869117611086731*^9, 3.869117615514331*^9}, {
  3.869122248985359*^9, 
  3.86912225714509*^9}},ExpressionUUID->"702e8fb6-3bfd-4c13-a412-\
50d70beb329a"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"3", " ", "eps"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", "5"}], "+", 
     RowBox[{"4", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "eps"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "eps"}], "]"}], "2"], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"2", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Omega", "[", 
    RowBox[{"3", "-", 
     RowBox[{"2", " ", "eps"}]}], "]"}]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "-", 
    RowBox[{"3", " ", "eps"}]}], "]"}]]], "Output",
 CellChangeTimes->{3.86911737504918*^9, 3.869117498544725*^9, 
  3.869117556222252*^9, 3.8691176172752457`*^9, 3.869117768749105*^9, 
  3.8691181256065483`*^9, 3.869122264167199*^9, 3.8691223283425426`*^9, 
  3.8691225923389053`*^9, 
  3.8691226336703777`*^9},ExpressionUUID->"754b7a67-3ed3-40c4-b6d7-\
32fa7f1db33d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Last", ",", " ", 
   RowBox[{
    RowBox[{"subsitute", " ", "the", " ", "expression", " ", "for", " ", 
     RowBox[{"Omega", ":", " ", 
      RowBox[{"Omega", "[", "p", "]"}]}]}], " ", "=", " ", 
    RowBox[{"2", " ", 
     RowBox[{
      RowBox[{"Pi", "^", 
       RowBox[{"(", 
        RowBox[{"p", "/", "2"}], ")"}]}], "/", 
      RowBox[{"Gamma", "[", 
       RowBox[{"p", "/", "2"}], "]"}]}]}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.869117619908318*^9, 
  3.869117649310935*^9}},ExpressionUUID->"c1fcacce-4585-4072-8176-\
5cce0ce83e24"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralinv", "=", 
  RowBox[{
   RowBox[{"integralinv", "/.", 
    RowBox[{
     RowBox[{"Omega", "[", "p_", "]"}], "\[Rule]", 
     RowBox[{"2", 
      RowBox[{
       RowBox[{"Pi", "^", 
        RowBox[{"(", 
         RowBox[{"p", "/", "2"}], ")"}]}], "/", 
       RowBox[{"Gamma", "[", 
        RowBox[{"p", "/", "2"}], "]"}]}]}]}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.8691176542665052`*^9, 3.869117662820241*^9}, {
  3.869122333398432*^9, 
  3.869122335644197*^9}},ExpressionUUID->"fb79fe3a-79e1-4d1d-9af8-\
5724901509c7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["4", 
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     RowBox[{"3", " ", "eps"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5", "2"]}], "+", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "eps"}], "]"}], "2"]}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     RowBox[{"3", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["3", "2"], "-", "eps"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.86911766350688*^9, 3.8691177706527243`*^9, 
  3.869118128049798*^9, 3.869122336327347*^9, 3.869122593492959*^9, 
  3.869122634511664*^9},ExpressionUUID->"257311d7-d0f7-4c24-a3f0-\
0eaab962b443"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"We", " ", "obtained", " ", 
   RowBox[{"eq", ".", " ", 
    RowBox[{"(", "3.132", ")"}]}], " ", "again"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691177222141447`*^9, 3.8691177411600723`*^9}, {
  3.869122607899699*^9, 
  3.8691226088689623`*^9}},ExpressionUUID->"db2296f2-d475-47cd-822e-\
645a6eb15422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralinv", "=", 
  RowBox[{"integralinv", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", "^", "z_"}], "\[RuleDelayed]", 
     RowBox[{"2", "^", 
      RowBox[{"Expand", "[", 
       RowBox[{"2", "z"}], "]"}]}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.86911766917992*^9, 3.8691177125316153`*^9}, {
  3.869117756153924*^9, 3.869117760236021*^9}, {3.86912260408112*^9, 
  3.869122605944598*^9}},ExpressionUUID->"1b71e879-d67b-488b-bbeb-\
8dee5abfbdd7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{
     RowBox[{"-", "8"}], "+", 
     RowBox[{"6", " ", "eps"}]}]], " ", 
   SuperscriptBox["\[Pi]", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["5", "2"]}], "+", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox["s", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     RowBox[{"2", " ", "eps"}]}]], " ", 
   SuperscriptBox[
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "eps"}], "]"}], "2"]}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", 
     RowBox[{"3", " ", "eps"}]}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["3", "2"], "-", "eps"}], "]"}]}]]], "Output",
 CellChangeTimes->{{3.8691176830619173`*^9, 3.8691177127983923`*^9}, {
   3.869117758512144*^9, 3.869117773227694*^9}, 3.869118129895926*^9, {
   3.8691225944245157`*^9, 
   3.869122635837269*^9}},ExpressionUUID->"6eca313d-7fec-4ae3-8b3c-\
f5f411e32b6a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", "Check", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8691226645974894`*^9, 
  3.869122669887608*^9}},ExpressionUUID->"cd421cf4-4005-48ce-a50e-\
6619a74ba6ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"integralinv", "==", "integral"}]], "Input",
 CellChangeTimes->{{3.8691226714392567`*^9, 
  3.869122672456458*^9}},ExpressionUUID->"b7635da9-dc8a-40a9-b59d-\
85eb7f15c844"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.869122672926972*^9},ExpressionUUID->"6f6a145d-0ede-4db0-9d02-\
afa59b4f383c"]
}, Open  ]]
},
WindowSize->{808, 711},
WindowMargins->{{Automatic, 92}, {Automatic, 0}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 618, 9, 51, "Text",ExpressionUUID->"24f0f075-8fd8-4ead-89a7-e1ad83d2d0e7"],
Cell[1179, 31, 403, 6, 51, "Text",ExpressionUUID->"84442314-781c-43bf-baed-d59687bd45b9"],
Cell[1585, 39, 399, 8, 30, "Input",ExpressionUUID->"e5300884-7ef0-4eb1-9239-586f110d948e"],
Cell[CellGroupData[{
Cell[2009, 51, 1899, 59, 94, "Input",ExpressionUUID->"06c575b7-02f4-4c37-9515-9876a159ce17"],
Cell[3911, 112, 2011, 61, 107, "Output",ExpressionUUID->"529d0514-b57a-4136-8094-338d9cf531c1"]
}, Open  ]],
Cell[5937, 176, 480, 10, 30, "Input",ExpressionUUID->"68d098e2-e9cc-42fb-b46a-962d579c2e0d"],
Cell[CellGroupData[{
Cell[6442, 190, 417, 11, 30, "Input",ExpressionUUID->"a735acd9-ca6e-4588-9621-88cfc1a8be44"],
Cell[6862, 203, 584, 14, 35, "Output",ExpressionUUID->"9577dee9-8387-4abd-9934-27fe96567556"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7483, 222, 424, 10, 30, "Input",ExpressionUUID->"9a9c03ed-9a6e-40f6-8603-cbc010150345"],
Cell[7910, 234, 683, 19, 62, "Output",ExpressionUUID->"5e651b81-5cb2-46cb-bb0b-e0e1bb144d23"]
}, Open  ]],
Cell[8608, 256, 294, 7, 30, "Input",ExpressionUUID->"d2949fbb-882b-4b56-a60b-fe106083cf41"],
Cell[CellGroupData[{
Cell[8927, 267, 517, 13, 30, "Input",ExpressionUUID->"bfb29ff2-6662-4c31-8b42-78cf2f43a769"],
Cell[9447, 282, 2992, 92, 165, "Output",ExpressionUUID->"3073b0c9-b776-4717-b3f6-378fda988d5b"]
}, Open  ]],
Cell[12454, 377, 441, 10, 52, "Input",ExpressionUUID->"2f7d83b0-b5ea-49c5-8efc-5431a8d54ea4"],
Cell[CellGroupData[{
Cell[12920, 391, 288, 7, 30, "Input",ExpressionUUID->"c564c83b-c63f-4789-9daa-5abf080090b2"],
Cell[13211, 400, 2764, 87, 165, "Output",ExpressionUUID->"032ae603-de02-42a2-9dca-b7a57aa1acc9"]
}, Open  ]],
Cell[15990, 490, 240, 5, 30, "Input",ExpressionUUID->"a160c938-f5c8-430d-a843-9248a509b20f"],
Cell[CellGroupData[{
Cell[16255, 499, 369, 9, 30, "Input",ExpressionUUID->"537bfca5-9ae1-458e-b126-27ee42cc82e1"],
Cell[16627, 510, 1013, 35, 62, "Output",ExpressionUUID->"cd26c145-683c-4cc0-bd40-468dd04d24d6"]
}, Open  ]],
Cell[17655, 548, 438, 12, 52, "Input",ExpressionUUID->"c300569b-1463-4e57-a41b-bfafff76161b"],
Cell[CellGroupData[{
Cell[18118, 564, 320, 9, 30, "Input",ExpressionUUID->"ed5c10d9-60b2-4fec-aacf-b045c6932237"],
Cell[18441, 575, 230, 6, 34, "Output",ExpressionUUID->"c62f306f-2b51-4db3-9ae9-1d8bdc82f54a"]
}, Open  ]],
Cell[18686, 584, 571, 16, 52, "Input",ExpressionUUID->"e6b442b6-fcbf-41d0-b672-6e76fa13a226"],
Cell[CellGroupData[{
Cell[19282, 604, 322, 9, 30, "Input",ExpressionUUID->"c52688b8-939d-4e1f-a50a-d229cd27243f"],
Cell[19607, 615, 266, 8, 54, "Output",ExpressionUUID->"7bd5c836-d59c-4a48-bab9-b607dd76ad58"]
}, Open  ]],
Cell[19888, 626, 418, 10, 30, "Input",ExpressionUUID->"7fa7c89e-5d2a-460c-b155-130e03b879ab"],
Cell[CellGroupData[{
Cell[20331, 640, 627, 18, 52, "Input",ExpressionUUID->"abd66041-1c61-4d6d-8870-09b5bbcfd235"],
Cell[20961, 660, 91241, 1492, 299, "Output",ExpressionUUID->"f89bf96e-202a-4362-be77-e268793559ef"]
}, Open  ]],
Cell[112217, 2155, 592, 16, 73, "Input",ExpressionUUID->"26cb9228-9bd8-4a93-a0f5-44f11f90f555"],
Cell[CellGroupData[{
Cell[112834, 2175, 373, 10, 30, "Input",ExpressionUUID->"504839b7-886c-4776-bb9b-6a8ef6f79b84"],
Cell[113210, 2187, 1168, 41, 61, "Output",ExpressionUUID->"c34a7f00-b88d-4a5a-b989-21da20369384"]
}, Open  ]],
Cell[114393, 2231, 152, 3, 30, "Input",ExpressionUUID->"d09ee919-1340-4591-8656-14b6e9ee1d36"],
Cell[114548, 2236, 420, 10, 30, "Input",ExpressionUUID->"565f773d-214c-44da-b9d5-9a719b4a8bdc"],
Cell[CellGroupData[{
Cell[114993, 2250, 599, 17, 52, "Input",ExpressionUUID->"dde6c01d-75a3-435f-a76d-0b50c7dec494"],
Cell[115595, 2269, 94016, 1540, 258, "Output",ExpressionUUID->"3d3c8e5d-5810-49cd-9991-b725352f80c2"]
}, Open  ]],
Cell[209626, 3812, 1095, 30, 73, "Input",ExpressionUUID->"dbd6ad51-2b53-4ba5-9674-a40375d0018d"],
Cell[CellGroupData[{
Cell[210746, 3846, 1062, 33, 73, "Input",ExpressionUUID->"18d3e800-5364-4865-82ab-a93a767625e9"],
Cell[211811, 3881, 2437, 80, 156, "Output",ExpressionUUID->"052ff114-6f97-467b-8a2c-6eae61bf03ef"]
}, Open  ]],
Cell[214263, 3964, 367, 10, 30, "Input",ExpressionUUID->"c84aeaea-b1f5-42f6-8c1f-b4c4710a106c"],
Cell[CellGroupData[{
Cell[214655, 3978, 298, 8, 30, "Input",ExpressionUUID->"d916b358-cc8f-401a-91ac-297d1746dbfe"],
Cell[214956, 3988, 1591, 54, 63, "Output",ExpressionUUID->"d3d526f9-990d-4794-89df-5343e2e635a7"]
}, Open  ]],
Cell[216562, 4045, 307, 8, 30, "Input",ExpressionUUID->"760f3552-d5d9-4a61-b0cd-52b16194efac"],
Cell[CellGroupData[{
Cell[216894, 4057, 332, 9, 30, "Input",ExpressionUUID->"abb0afa5-2941-40ad-b54f-d563ffe7c8ea"],
Cell[217229, 4068, 1449, 47, 60, "Output",ExpressionUUID->"adb057cb-aa99-4efa-b606-5c4199a1176d"]
}, Open  ]],
Cell[218693, 4118, 503, 12, 30, "Input",ExpressionUUID->"39930f32-6d1d-44e5-a2aa-db3a98a2119d"],
Cell[CellGroupData[{
Cell[219221, 4134, 1043, 32, 73, "Input",ExpressionUUID->"b06994e0-b91e-44c7-8499-77b908aed0b0"],
Cell[220267, 4168, 1337, 46, 56, "Output",ExpressionUUID->"892b41fa-7027-4ec7-a775-98715f09817e"]
}, Open  ]],
Cell[221619, 4217, 424, 11, 30, "Input",ExpressionUUID->"3319373e-8239-47df-8000-c538c199858b"],
Cell[CellGroupData[{
Cell[222068, 4232, 499, 11, 30, "Input",ExpressionUUID->"f44b2772-c3e7-4c87-9a33-a085d6bd328b"],
Cell[222570, 4245, 1307, 40, 68, "Output",ExpressionUUID->"c78bce63-40f8-4ff0-b8b4-71fd04868a7b"]
}, Open  ]],
Cell[223892, 4288, 359, 9, 30, "Input",ExpressionUUID->"64d1610f-5280-4147-8ecc-7da7bbce4ecb"],
Cell[CellGroupData[{
Cell[224276, 4301, 517, 11, 30, "Input",ExpressionUUID->"8423d1c5-c356-4534-b903-cf29425cf1e3"],
Cell[224796, 4314, 1037, 32, 56, "Output",ExpressionUUID->"acf28b15-3d71-4832-accc-c11333b74640"]
}, Open  ]],
Cell[225848, 4349, 599, 16, 30, "Input",ExpressionUUID->"4661d425-5552-42c6-8171-346f202baf7c"],
Cell[CellGroupData[{
Cell[226472, 4369, 524, 16, 30, "Input",ExpressionUUID->"0eecb98a-f30c-4cf3-aeb7-c9ce3b385f33"],
Cell[226999, 4387, 839, 28, 68, "Output",ExpressionUUID->"9d71c9e8-d531-4929-88e0-7020e8b55a95"]
}, Open  ]],
Cell[227853, 4418, 291, 7, 30, "Input",ExpressionUUID->"74f81d31-7ecf-4e3b-b8a3-42a709f6dbc6"],
Cell[CellGroupData[{
Cell[228169, 4429, 438, 12, 30, "Input",ExpressionUUID->"27e5ec50-f37d-48c6-9173-2c4c90ce7eab"],
Cell[228610, 4443, 895, 29, 68, "Output",ExpressionUUID->"5258b51f-4bbe-494b-a063-9c8f20fbc363"]
}, Open  ]],
Cell[229520, 4475, 471, 7, 51, "Text",ExpressionUUID->"8cffd45e-5926-4a5a-82de-b9bc1d459b3b"],
Cell[229994, 4484, 363, 9, 30, "Input",ExpressionUUID->"a2b9c91d-6898-48b9-b4cf-137cd501227b"],
Cell[CellGroupData[{
Cell[230382, 4497, 1058, 30, 73, "Input",ExpressionUUID->"3fd17e1c-cd69-4a90-8473-df6cd12abca5"],
Cell[231443, 4529, 923, 29, 57, "Output",ExpressionUUID->"025bdc62-184d-4eb0-8230-c8b751f7d516"]
}, Open  ]],
Cell[232381, 4561, 290, 7, 30, "Input",ExpressionUUID->"c0e6fe95-213a-428e-8978-21c531c5789f"],
Cell[CellGroupData[{
Cell[232696, 4572, 1532, 44, 157, "Input",ExpressionUUID->"33eebb04-b77a-4790-8cb3-13651bf2b74e"],
Cell[234231, 4618, 387, 11, 52, "Output",ExpressionUUID->"9c6cc682-50c7-4d81-a91f-251d21e84902"]
}, Open  ]],
Cell[234633, 4632, 970, 17, 94, "Input",ExpressionUUID->"7c28b65a-26b9-4536-8793-dd7f93e0fd4b"],
Cell[CellGroupData[{
Cell[235628, 4653, 830, 23, 73, "Input",ExpressionUUID->"244635c5-23b9-4d10-a2ad-f57919dab7dc"],
Cell[236461, 4678, 2370, 77, 137, "Output",ExpressionUUID->"8679ffa5-1cc1-4937-bc56-68bb2d1e9128"]
}, Open  ]],
Cell[238846, 4758, 534, 11, 30, "Input",ExpressionUUID->"196c60c2-36ae-4bb4-9e37-3778e0085318"],
Cell[CellGroupData[{
Cell[239405, 4773, 472, 12, 30, "Input",ExpressionUUID->"f98261ea-1078-4b61-ac4f-bf191d239be3"],
Cell[239880, 4787, 494, 8, 34, "Output",ExpressionUUID->"3250857f-04ba-42a0-aa68-2d454f0c6d14"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240411, 4800, 478, 11, 30, "Input",ExpressionUUID->"afdc2c80-7107-4a28-802c-dd7d42659690"],
Cell[240892, 4813, 534, 10, 34, "Output",ExpressionUUID->"f7c2220c-b7ca-472c-ba08-6fff99f36d62"]
}, Open  ]],
Cell[241441, 4826, 787, 14, 73, "Input",ExpressionUUID->"80e21aa2-646e-4cd7-9513-cfffe15c9d99"],
Cell[CellGroupData[{
Cell[242253, 4844, 625, 15, 30, "Input",ExpressionUUID->"054d67cb-038e-4e8e-91d2-a5e738a7d066"],
Cell[242881, 4861, 2198, 69, 119, "Output",ExpressionUUID->"6c942f54-7155-43a1-b733-ad1f5769d3a5"]
}, Open  ]],
Cell[245094, 4933, 441, 10, 52, "Input",ExpressionUUID->"2b29fc3a-cfc0-47e2-927c-dd75915c7cad"],
Cell[CellGroupData[{
Cell[245560, 4947, 343, 8, 30, "Input",ExpressionUUID->"ae9e0541-4767-4203-a96b-71a2314dca57"],
Cell[245906, 4957, 1975, 65, 119, "Output",ExpressionUUID->"80a4d184-ffc2-46e3-8ab7-7921da1774ea"]
}, Open  ]],
Cell[247896, 5025, 338, 6, 30, "Input",ExpressionUUID->"0ce4e0fd-a3c2-4605-9b26-fda5227591ed"],
Cell[CellGroupData[{
Cell[248259, 5035, 377, 9, 30, "Input",ExpressionUUID->"ee45f283-5aba-4b3b-bcf1-ee34c9a9658c"],
Cell[248639, 5046, 953, 33, 54, "Output",ExpressionUUID->"32ef6328-0dc9-4d37-acda-d4a0cef659f8"]
}, Open  ]],
Cell[249607, 5082, 558, 13, 52, "Input",ExpressionUUID->"936dce8e-2b47-4a21-983b-417d627ef77e"],
Cell[250168, 5097, 755, 17, 52, "Input",ExpressionUUID->"d7a7fcca-4a97-4f32-a81d-3c9e62f101fd"],
Cell[250926, 5116, 392, 10, 30, "Input",ExpressionUUID->"4593a7d5-e582-42da-87bd-086cc7ffb932"],
Cell[CellGroupData[{
Cell[251343, 5130, 306, 8, 30, "Input",ExpressionUUID->"8e604403-5369-4711-87b6-3a0c1a392add"],
Cell[251652, 5140, 1028, 34, 63, "Output",ExpressionUUID->"0a5a3eb2-5d76-4c26-bcb5-fbff96c48cae"]
}, Open  ]],
Cell[252695, 5177, 307, 8, 30, "Input",ExpressionUUID->"7b042e12-4950-4200-a9aa-28c7442f8b42"],
Cell[CellGroupData[{
Cell[253027, 5189, 478, 12, 30, "Input",ExpressionUUID->"6f1b6f5e-eaa2-48bc-92c6-cc8d1ab431ee"],
Cell[253508, 5203, 1139, 34, 34, "Output",ExpressionUUID->"4b2b1411-3814-436e-be4d-c7841351257f"]
}, Open  ]],
Cell[254662, 5240, 468, 10, 30, "Input",ExpressionUUID->"b228c682-db06-4bf1-86d4-e49f0691900a"],
Cell[CellGroupData[{
Cell[255155, 5254, 632, 13, 30, "Input",ExpressionUUID->"fba96215-9560-4a61-afb8-22661b26a894"],
Cell[255790, 5269, 1377, 40, 68, "Output",ExpressionUUID->"324c0dcf-d81e-4e1f-936d-3dfeab802c9a"]
}, Open  ]],
Cell[257182, 5312, 409, 10, 30, "Input",ExpressionUUID->"7809669e-fe00-49c8-a8d8-6b48144757db"],
Cell[CellGroupData[{
Cell[257616, 5326, 572, 12, 30, "Input",ExpressionUUID->"702e8fb6-3bfd-4c13-a412-50d70beb329a"],
Cell[258191, 5340, 1137, 34, 56, "Output",ExpressionUUID->"754b7a67-3ed3-40c4-b6d7-32fa7f1db33d"]
}, Open  ]],
Cell[259343, 5377, 599, 16, 30, "Input",ExpressionUUID->"c1fcacce-4585-4072-8176-5cce0ce83e24"],
Cell[CellGroupData[{
Cell[259967, 5397, 579, 17, 30, "Input",ExpressionUUID->"fb79fe3a-79e1-4d1d-9af8-5724901509c7"],
Cell[260549, 5416, 908, 29, 68, "Output",ExpressionUUID->"257311d7-d0f7-4c24-a3f0-0eaab962b443"]
}, Open  ]],
Cell[261472, 5448, 356, 8, 30, "Input",ExpressionUUID->"db2296f2-d475-47cd-822e-645a6eb15422"],
Cell[CellGroupData[{
Cell[261853, 5460, 489, 12, 30, "Input",ExpressionUUID->"1b71e879-d67b-488b-bbeb-8dee5abfbdd7"],
Cell[262345, 5474, 947, 30, 68, "Output",ExpressionUUID->"6eca313d-7fec-4ae3-8b3c-f5f411e32b6a"]
}, Open  ]],
Cell[263307, 5507, 193, 4, 30, "Input",ExpressionUUID->"cd421cf4-4005-48ce-a50e-6619a74ba6ca"],
Cell[CellGroupData[{
Cell[263525, 5515, 195, 4, 30, "Input",ExpressionUUID->"b7635da9-dc8a-40a9-b59d-85eb7f15c844"],
Cell[263723, 5521, 133, 3, 34, "Output",ExpressionUUID->"6f6a145d-0ede-4db0-9d02-afa59b4f383c"]
}, Open  ]]
}
]
*)

